{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/components/admin/app-sidebar/components/SidebarLinkGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/components/admin/app-sidebar/components/SidebarLinkGroup.vue","mtime":1563286052629},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SidebarLink from './SidebarLink'\nimport Expanding from 'vue-bulma-expanding/src/Expanding'\n\nexport default {\n  name: 'sidebar-link-group',\n  components: {\n    SidebarLink,\n    Expanding,\n  },\n  data () {\n    return {\n      expanded: this.expanded,\n    }\n  },\n  mounted () {\n    let linkGroup = this.$refs.linkGroupWrapper\n    if (linkGroup.querySelector('.router-link-active') !== null) {\n      this.expanded = true\n    }\n  },\n  watch: {\n    $route (route) {\n      this.expanded = false\n    },\n  },\n  methods: {\n    toggleMenuItem () {\n      this.expanded = !this.expanded\n    },\n  },\n  computed: {\n    classObject: function () {\n      return {\n        'expanded': this.expanded,\n      }\n    },\n  },\n}\n\n",{"version":3,"sources":["SidebarLinkGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarLinkGroup.vue","sourceRoot":"src/components/admin/app-sidebar/components","sourcesContent":["<template>\n  <li class=\"sidebar-link-group sidebar-link\">\n    <a href=\"#\"\n       target=\"_self\"\n       @click.stop.prevent=\"toggleMenuItem()\"\n       class=\"sidebar-link__router-link\"\n       :class=\"classObject\">\n      <slot name=\"title\"></slot>\n      <i class=\"expand-icon fa fa-angle-down\"></i>\n    </a>\n    <expanding>\n      <ul class=\"sidebar-submenu in\" v-show=\"this.expanded\"\n          ref=\"linkGroupWrapper\">\n        <slot></slot>\n      </ul>\n    </expanding>\n  </li>\n</template>\n\n<script>\nimport SidebarLink from './SidebarLink'\nimport Expanding from 'vue-bulma-expanding/src/Expanding'\n\nexport default {\n  name: 'sidebar-link-group',\n  components: {\n    SidebarLink,\n    Expanding,\n  },\n  data () {\n    return {\n      expanded: this.expanded,\n    }\n  },\n  mounted () {\n    let linkGroup = this.$refs.linkGroupWrapper\n    if (linkGroup.querySelector('.router-link-active') !== null) {\n      this.expanded = true\n    }\n  },\n  watch: {\n    $route (route) {\n      this.expanded = false\n    },\n  },\n  methods: {\n    toggleMenuItem () {\n      this.expanded = !this.expanded\n    },\n  },\n  computed: {\n    classObject: function () {\n      return {\n        'expanded': this.expanded,\n      }\n    },\n  },\n}\n\n</script>\n\n<style lang=\"scss\">\n.sidebar-link-group {\n  .sidebar-link__router-link {\n    .expand-icon {\n      position: absolute;\n      right: $sidebar-arrow-right;\n      top: calc(50% - #{$font-size-root} / 2);\n      font-weight: bold;\n      transition: transform 0.3s ease;\n    }\n    &.expanded {\n      .expand-icon {\n        transform: rotate(180deg);\n      }\n    }\n  }\n\n  .sidebar-submenu {\n    list-style: none;\n    padding-left: 0;\n    li {\n      display: block;\n      padding-left: 0;\n    }\n    .sidebar-link__router-link {\n      height: $sidebar-submenu-link-height;\n      padding-left: $sidebar-submenu-link-pl;\n      font-size: $font-size-smaller;\n    }\n  }\n}\n\n.expand-icon {\n  color: $vue-green;\n}\n\n</style>\n"]}]}