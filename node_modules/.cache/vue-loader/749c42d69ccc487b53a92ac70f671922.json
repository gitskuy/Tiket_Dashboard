{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/components/forms/form-elements/FormElements.vue?vue&type=template&id=676de68c&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/components/forms/form-elements/FormElements.vue","mtime":1563286052629},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"form-elements\" }, [\n    _c(\"div\", { staticClass: \"va-row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"flex md12\" },\n        [\n          _c(\n            \"vuestic-widget\",\n            {\n              attrs: { headerText: _vm._f(\"translate\")(\"forms.inputs.title\") }\n            },\n            [\n              _c(\"form\", [\n                _c(\"div\", { staticClass: \"va-row\" }, [\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"div\", { staticClass: \"input-group\" }, [\n                          _c(\"input\", {\n                            attrs: { id: \"simple-input\", required: \"\" }\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"control-label\",\n                              attrs: { for: \"simple-input\" }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"translate\")(\"forms.inputs.textInput\")\n                                )\n                              )\n                            ]\n                          ),\n                          _c(\"i\", { staticClass: \"bar\" })\n                        ])\n                      ]),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"form-group with-icon-right\",\n                          class: {\n                            \"has-error\": _vm.errors.has(\"successfulEmail\"),\n                            valid: _vm.isSuccessfulEmailValid\n                          }\n                        },\n                        [\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.successfulEmail,\n                                  expression: \"successfulEmail\"\n                                },\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|email\",\n                                  expression: \"'required|email'\"\n                                }\n                              ],\n                              attrs: {\n                                id: \"successfulEmail\",\n                                name: \"successfulEmail\",\n                                required: \"\"\n                              },\n                              domProps: { value: _vm.successfulEmail },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.successfulEmail = $event.target.value\n                                }\n                              }\n                            }),\n                            _c(\"i\", {\n                              staticClass:\n                                \"fa fa-exclamation-triangle error-icon icon-right input-icon\"\n                            }),\n                            _c(\"i\", {\n                              staticClass:\n                                \"fa fa-check valid-icon icon-right input-icon\"\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"successfulEmail\" }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\n                                      \"forms.inputs.emailValidatedSuccess\"\n                                    )\n                                  ) + \" \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" }),\n                            _c(\n                              \"small\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.errors.has(\"successfulEmail\"),\n                                    expression: \"errors.has('successfulEmail')\"\n                                  }\n                                ],\n                                staticClass: \"help text-danger\"\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.errors.first(\"successfulEmail\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            )\n                          ])\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"form-group with-icon-right\",\n                          class: { \"has-error\": _vm.errors.has(\"wrongEmail\") }\n                        },\n                        [\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.wrongEmail,\n                                  expression: \"wrongEmail\"\n                                },\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|email\",\n                                  expression: \"'required|email'\"\n                                }\n                              ],\n                              attrs: {\n                                id: \"wrongEmail\",\n                                name: \"wrongEmail\",\n                                required: \"\"\n                              },\n                              domProps: { value: _vm.wrongEmail },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.wrongEmail = $event.target.value\n                                }\n                              }\n                            }),\n                            _c(\"i\", {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: _vm.errors.has(\"wrongEmail\"),\n                                  expression: \"errors.has('wrongEmail')\"\n                                }\n                              ],\n                              staticClass:\n                                \"fa fa-exclamation-triangle icon-right input-icon\"\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"wrongEmail\" }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\n                                      \"forms.inputs.emailValidated\"\n                                    )\n                                  )\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" }),\n                            _c(\n                              \"small\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.errors.has(\"wrongEmail\"),\n                                    expression: \"errors.has('wrongEmail')\"\n                                  }\n                                ],\n                                staticClass: \"help text-danger\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(_vm.errors.first(\"wrongEmail\")) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            )\n                          ])\n                        ]\n                      ),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"div\", { staticClass: \"input-group\" }, [\n                          _c(\"textarea\", {\n                            attrs: {\n                              type: \"text\",\n                              id: \"simple-textarea\",\n                              required: \"\"\n                            }\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"control-label\",\n                              attrs: { for: \"simple-textarea\" }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"translate\")(\"forms.inputs.textArea\")\n                                )\n                              )\n                            ]\n                          ),\n                          _c(\"i\", { staticClass: \"bar\" })\n                        ])\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\"div\", { staticClass: \"form-group with-icon-left\" }, [\n                        _c(\"div\", { staticClass: \"input-group\" }, [\n                          _c(\"input\", {\n                            attrs: {\n                              id: \"input-icon-left\",\n                              name: \"input-icon-left\",\n                              required: \"\"\n                            }\n                          }),\n                          _c(\"i\", {\n                            staticClass: \"fa fa-envelope-o icon-left input-icon\"\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"control-label\",\n                              attrs: { for: \"input-icon-left\" }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"translate\")(\n                                    \"forms.inputs.inputWithIcon\"\n                                  )\n                                )\n                              )\n                            ]\n                          ),\n                          _c(\"i\", { staticClass: \"bar\" })\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group with-icon-right\" }, [\n                        _c(\"div\", { staticClass: \"input-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.clearableText,\n                                expression: \"clearableText\"\n                              }\n                            ],\n                            attrs: {\n                              id: \"clear-input\",\n                              name: \"clear-input\",\n                              required: \"\"\n                            },\n                            domProps: { value: _vm.clearableText },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.clearableText = $event.target.value\n                              }\n                            }\n                          }),\n                          _c(\"i\", {\n                            staticClass:\n                              \"fa fa-times icon-right input-icon pointer\",\n                            on: {\n                              click: function($event) {\n                                _vm.clear(\"clearableText\")\n                              }\n                            }\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"control-label\",\n                              attrs: { for: \"clear-input\", role: \"button\" }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"translate\")(\n                                    \"forms.inputs.inputWithClearButton\"\n                                  )\n                                )\n                              )\n                            ]\n                          ),\n                          _c(\"i\", { staticClass: \"bar\" })\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"div\", { staticClass: \"input-group\" }, [\n                          _c(\"input\", {\n                            attrs: {\n                              id: \"inputWithDescription\",\n                              required: \"\",\n                              title: \"\"\n                            }\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"control-label\",\n                              attrs: { for: \"simple-input\" }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"translate\")(\n                                    \"forms.inputs.textInputWithDescription\"\n                                  )\n                                )\n                              )\n                            ]\n                          ),\n                          _c(\"i\", { staticClass: \"bar\" }),\n                          _c(\"small\", { staticClass: \"help text-secondary\" }, [\n                            _vm._v(\n                              \"\\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n                      sed\\n                      do eiusmod tempor incididunt ut labore et dolore magna\\n                      aliqua.\\n                    \"\n                            )\n                          ])\n                        ])\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group form-group-w-btn\" },\n                        [\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              attrs: { id: \"input-w-btn\", required: \"\" }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"input-w-btn\" }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\n                                      \"forms.inputs.inputWithButton\"\n                                    )\n                                  )\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ]),\n                          _c(\n                            \"div\",\n                            { staticClass: \"btn btn-micro btn-primary\" },\n                            [\n                              _vm._v(\n                                \"\\n                    \" +\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\"forms.inputs.upload\")\n                                  ) +\n                                  \"\\n                  \"\n                              )\n                            ]\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group form-group-w-btn\" },\n                        [\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              attrs: { id: \"input-w-btn-round\", required: \"\" }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"input-w-btn-round\" }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\n                                      \"forms.inputs.inputWithRoundButton\"\n                                    )\n                                  )\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ]),\n                          _c(\n                            \"div\",\n                            {\n                              staticClass:\n                                \"btn btn-primary btn-with-icon btn-micro rounded-icon\"\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"btn-with-icon-content\" },\n                                [\n                                  _c(\"i\", {\n                                    staticClass: \"ion-md-cloud-outline ion\"\n                                  })\n                                ]\n                              )\n                            ]\n                          )\n                        ]\n                      )\n                    ])\n                  ])\n                ])\n              ])\n            ]\n          )\n        ],\n        1\n      )\n    ]),\n    _c(\"div\", { staticClass: \"va-row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"flex md12\" },\n        [\n          _c(\n            \"vuestic-widget\",\n            { attrs: { headerText: _vm.$t(\"forms.dateTimePicker.title\") } },\n            [\n              _c(\"form\", [\n                _c(\"div\", { staticClass: \"va-row\" }, [\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: { id: \"date-picker-basic\" },\n                              model: {\n                                value: _vm.datepicker.simple,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"simple\", $$v)\n                                },\n                                expression: \"datepicker.simple\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-basic\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\"forms.dateTimePicker.basic\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-time\",\n                                config: { enableTime: true }\n                              },\n                              model: {\n                                value: _vm.datepicker.time,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"time\", $$v)\n                                },\n                                expression: \"datepicker.time\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-time\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\"forms.dateTimePicker.time\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-custom-first-day\",\n                                config: { locale: { firstDayOfWeek: 1 } }\n                              },\n                              model: {\n                                value: _vm.datepicker.customFirstDay,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.datepicker,\n                                    \"customFirstDay\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"datepicker.customFirstDay\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-custom-first-day\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        \"forms.dateTimePicker.customFirstDay\"\n                                      )\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-disabled\",\n                                config: { disable: _vm.datePickerDisabled }\n                              },\n                              model: {\n                                value: _vm.datepicker.disabled,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"disabled\", $$v)\n                                },\n                                expression: \"datepicker.disabled\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-disabled\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\"forms.dateTimePicker.disabled\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-multiple\",\n                                config: { mode: \"multiple\" }\n                              },\n                              model: {\n                                value: _vm.datepicker.multiple,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"multiple\", $$v)\n                                },\n                                expression: \"datepicker.multiple\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-multiple\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\"forms.dateTimePicker.multiple\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-custom-date-format\",\n                                config: { altInput: true, altFormat: \"F j, Y\" }\n                              },\n                              model: {\n                                value: _vm.datepicker.customDate,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"customDate\", $$v)\n                                },\n                                expression: \"datepicker.customDate\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-custom-date-format\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        \"forms.dateTimePicker.customDateFormat\"\n                                      )\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            ),\n                            _c(\"i\", { staticClass: \"bar\" })\n                          ],\n                          1\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\"fieldset\", [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"input-group\" },\n                          [\n                            _c(\"vuestic-date-picker\", {\n                              attrs: {\n                                id: \"date-picker-range\",\n                                config: { mode: \"range\", inline: true }\n                              },\n                              model: {\n                                value: _vm.datepicker.range,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.datepicker, \"range\", $$v)\n                                },\n                                expression: \"datepicker.range\"\n                              }\n                            }),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"control-label\",\n                                attrs: { for: \"date-picker-range\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(\n                                      _vm.$t(\"forms.dateTimePicker.range\")\n                                    ) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ])\n                    ])\n                  ])\n                ])\n              ])\n            ]\n          )\n        ],\n        1\n      )\n    ]),\n    _c(\"div\", { staticClass: \"va-row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"flex md12\" },\n        [\n          _c(\n            \"vuestic-widget\",\n            {\n              attrs: { headerText: _vm._f(\"translate\")(\"forms.selects.title\") }\n            },\n            [\n              _c(\"form\", [\n                _c(\"div\", { staticClass: \"va-row\" }, [\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"vuestic-simple-select\", {\n                          attrs: {\n                            label: _vm._f(\"translate\")(\"forms.selects.simple\"),\n                            \"option-key\": \"description\",\n                            options: _vm.simpleOptions\n                          },\n                          model: {\n                            value: _vm.simpleSelectModel,\n                            callback: function($$v) {\n                              _vm.simpleSelectModel = $$v\n                            },\n                            expression: \"simpleSelectModel\"\n                          }\n                        }),\n                        _c(\"vuestic-simple-select\", {\n                          attrs: {\n                            label: _vm._f(\"translate\")(\"forms.selects.country\"),\n                            options: _vm.countriesList\n                          },\n                          model: {\n                            value: _vm.chosenCountry,\n                            callback: function($$v) {\n                              _vm.chosenCountry = $$v\n                            },\n                            expression: \"chosenCountry\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md4\" }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"vuestic-multi-select\", {\n                          attrs: {\n                            label: _vm._f(\"translate\")(\"forms.selects.multi\"),\n                            \"option-key\": \"description\",\n                            options: _vm.simpleOptions\n                          },\n                          model: {\n                            value: _vm.multiSelectModel,\n                            callback: function($$v) {\n                              _vm.multiSelectModel = $$v\n                            },\n                            expression: \"multiSelectModel\"\n                          }\n                        }),\n                        _c(\"vuestic-multi-select\", {\n                          attrs: {\n                            label: _vm._f(\"translate\")(\n                              \"forms.selects.countryMulti\"\n                            ),\n                            options: _vm.countriesList\n                          },\n                          model: {\n                            value: _vm.multiSelectCountriesModel,\n                            callback: function($$v) {\n                              _vm.multiSelectCountriesModel = $$v\n                            },\n                            expression: \"multiSelectCountriesModel\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ])\n              ])\n            ]\n          )\n        ],\n        1\n      )\n    ]),\n    _c(\"div\", { staticClass: \"va-row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"flex md12\" },\n        [\n          _c(\n            \"vuestic-widget\",\n            {\n              attrs: { headerText: _vm._f(\"translate\")(\"forms.controls.title\") }\n            },\n            [\n              _c(\"form\", [\n                _c(\"div\", { staticClass: \"va-row\" }, [\n                  _c(\"div\", { staticClass: \"flex md3\" }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"vuestic-checkbox\", {\n                          attrs: { label: _vm.$t(\"forms.controls.unselected\") },\n                          model: {\n                            value: _vm.checkbox.unselected,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"unselected\", $$v)\n                            },\n                            expression: \"checkbox.unselected\"\n                          }\n                        }),\n                        _c(\"vuestic-checkbox\", {\n                          attrs: { label: _vm.$t(\"forms.controls.selected\") },\n                          model: {\n                            value: _vm.checkbox.selected,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"selected\", $$v)\n                            },\n                            expression: \"checkbox.selected\"\n                          }\n                        }),\n                        _c(\"vuestic-checkbox\", {\n                          attrs: {\n                            label: _vm.$t(\"forms.controls.readonly\"),\n                            readonly: true\n                          },\n                          model: {\n                            value: _vm.checkbox.readonly,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"readonly\", $$v)\n                            },\n                            expression: \"checkbox.readonly\"\n                          }\n                        }),\n                        _c(\"vuestic-checkbox\", {\n                          attrs: {\n                            label: _vm.$t(\"forms.controls.disabled\"),\n                            disabled: true\n                          },\n                          model: {\n                            value: _vm.checkbox.disabled,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"disabled\", $$v)\n                            },\n                            expression: \"checkbox.disabled\"\n                          }\n                        }),\n                        _c(\"vuestic-checkbox\", {\n                          attrs: {\n                            label: _vm.$t(\"forms.controls.error\"),\n                            error: \"\"\n                          },\n                          model: {\n                            value: _vm.checkbox.error,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"error\", $$v)\n                            },\n                            expression: \"checkbox.error\"\n                          }\n                        }),\n                        _c(\"vuestic-checkbox\", {\n                          attrs: {\n                            label: _vm.$t(\"forms.controls.errorMessage\"),\n                            \"error-messages\": _vm.errorMessages,\n                            errorCount: 2\n                          },\n                          model: {\n                            value: _vm.checkbox.errorMessages,\n                            callback: function($$v) {\n                              _vm.$set(_vm.checkbox, \"errorMessages\", $$v)\n                            },\n                            expression: \"checkbox.errorMessages\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md3\" }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"vuestic-radio-button\", {\n                          attrs: { option: \"option1\", label: \"Radio\" },\n                          model: {\n                            value: _vm.radioSelectedOption,\n                            callback: function($$v) {\n                              _vm.radioSelectedOption = $$v\n                            },\n                            expression: \"radioSelectedOption\"\n                          }\n                        }),\n                        _c(\"vuestic-radio-button\", {\n                          attrs: { option: \"option2\", label: \"Radio\" },\n                          model: {\n                            value: _vm.radioSelectedOption,\n                            callback: function($$v) {\n                              _vm.radioSelectedOption = $$v\n                            },\n                            expression: \"radioSelectedOption\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"vuestic-radio-button\", {\n                          attrs: {\n                            option: \"option1\",\n                            disabled: \"\",\n                            label: \"Disabled Radio\"\n                          },\n                          model: {\n                            value: _vm.radioSelectedDisableOption,\n                            callback: function($$v) {\n                              _vm.radioSelectedDisableOption = $$v\n                            },\n                            expression: \"radioSelectedDisableOption\"\n                          }\n                        }),\n                        _c(\"vuestic-radio-button\", {\n                          attrs: {\n                            option: \"option2\",\n                            disabled: \"\",\n                            label: \"Disabled Radio\"\n                          },\n                          model: {\n                            value: _vm.radioSelectedDisableOption,\n                            callback: function($$v) {\n                              _vm.radioSelectedDisableOption = $$v\n                            },\n                            expression: \"radioSelectedDisableOption\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"flex md3\" }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\n                          \"vuestic-switch\",\n                          {\n                            model: {\n                              value: _vm.isMale,\n                              callback: function($$v) {\n                                _vm.isMale = $$v\n                              },\n                              expression: \"isMale\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"span\",\n                              {\n                                attrs: { slot: \"trueTitle\" },\n                                slot: \"trueTitle\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\"forms.controls.male\")\n                                  )\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"span\",\n                              {\n                                attrs: { slot: \"falseTitle\" },\n                                slot: \"falseTitle\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"translate\")(\"forms.controls.female\")\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ])\n              ])\n            ]\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}