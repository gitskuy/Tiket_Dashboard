{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-color-picker/VuesticColorPickerInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-color-picker/VuesticColorPickerInput.vue","mtime":1563286052645},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuesticAdvancedColorPicker from './VuesticAdvancedColorPicker'\nimport VuesticSimplePalettePicker from './VuesticSimplePalettePicker'\nimport VuesticSliderColorPicker from './VuesticSliderColorPicker'\nimport VuesticColorSquare from './VuesticColorSquare'\nimport VuesticColorInput from './VuesticColorInput'\nimport VuesticColorDropdown from './VuesticColorDropdown'\n\nexport default {\n  name: 'vuestic-color-picker-input',\n  components: {\n    VuesticColorDropdown,\n    VuesticColorSquare,\n    VuesticSimplePalettePicker,\n    VuesticAdvancedColorPicker,\n    VuesticSliderColorPicker,\n    VuesticColorInput,\n  },\n  props: {\n    mode: {\n      type: String,\n    },\n    palette: {\n      type: Array,\n    },\n    value: {\n      default: '',\n    },\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    valueProxy: {\n      get () {\n        return this.value\n      },\n      set (value) {\n        this.$emit('input', value)\n      },\n    },\n    disableInput () {\n      if (this.mode === 'palette') {\n        if (this.palette) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n  methods: {\n    validator (value) {\n      if (typeof (value) !== 'undefined') {\n        return ['palette', 'slider', 'advanced'].includes(value)\n      } else {\n        return false\n      }\n    },\n  },\n}\n",{"version":3,"sources":["VuesticColorPickerInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticColorPickerInput.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-color-picker","sourcesContent":["<template>\n  <div class=\"vuestic-color-picker-input\">\n    <div v-if=\"validator(this.mode)\">\n      <vuestic-color-dropdown>\n        <div slot=\"toggle\" class=\"vuestic-color-picker-input__slot\">\n          <slot>\n            <vuestic-color-input v-model=\"valueProxy\" mode=\"palette\"\n                                 :disabled=\"disableInput\" :selected=\"selected\"/>\n          </slot>\n        </div>\n        <div class=\"vuestic-color-picker-input__dropdown\">\n          <div v-if=\"this.mode==='advanced'\">\n            <vuestic-advanced-color-picker v-model=\"valueProxy\"/>\n          </div>\n          <div v-if=\"this.mode==='palette'\">\n            <vuestic-simple-palette-picker v-model=\"valueProxy\"\n                                           :palette=\"palette\"/>\n          </div>\n          <div v-if=\"this.mode==='slider'\">\n            <vuestic-slider-color-picker v-model=\"valueProxy\"/>\n          </div>\n        </div>\n      </vuestic-color-dropdown>\n    </div>\n    <div v-else>\n      <slot>\n        <vuestic-color-input v-model=\"valueProxy\" mode=\"palette\"\n                             :disabled=\"disableInput\"/>\n      </slot>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport VuesticAdvancedColorPicker from './VuesticAdvancedColorPicker'\nimport VuesticSimplePalettePicker from './VuesticSimplePalettePicker'\nimport VuesticSliderColorPicker from './VuesticSliderColorPicker'\nimport VuesticColorSquare from './VuesticColorSquare'\nimport VuesticColorInput from './VuesticColorInput'\nimport VuesticColorDropdown from './VuesticColorDropdown'\n\nexport default {\n  name: 'vuestic-color-picker-input',\n  components: {\n    VuesticColorDropdown,\n    VuesticColorSquare,\n    VuesticSimplePalettePicker,\n    VuesticAdvancedColorPicker,\n    VuesticSliderColorPicker,\n    VuesticColorInput,\n  },\n  props: {\n    mode: {\n      type: String,\n    },\n    palette: {\n      type: Array,\n    },\n    value: {\n      default: '',\n    },\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    valueProxy: {\n      get () {\n        return this.value\n      },\n      set (value) {\n        this.$emit('input', value)\n      },\n    },\n    disableInput () {\n      if (this.mode === 'palette') {\n        if (this.palette) {\n          return true\n        }\n      }\n      return false\n    },\n  },\n  methods: {\n    validator (value) {\n      if (typeof (value) !== 'undefined') {\n        return ['palette', 'slider', 'advanced'].includes(value)\n      } else {\n        return false\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-color-picker-input {\n  &__dropdown {\n    background: $white;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n\n  &__slot {\n    cursor: pointer\n  }\n}\n</style>\n"]}]}