{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/node_modules/vuetable-2/src/components/VuetablePaginationMixin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vuetable-2/src/components/VuetablePaginationMixin.vue","mtime":1517627834000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default {\r\n  props: {\r\n    css: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          wrapperClass: 'ui right floated pagination menu',\r\n          activeClass: 'active large',\r\n          disabledClass: 'disabled',\r\n          pageClass: 'item',\r\n          linkClass: 'icon item',\r\n          paginationClass: 'ui bottom attached segment grid',\r\n          paginationInfoClass: 'left floated left aligned six wide column',\r\n          dropdownClass: 'ui search dropdown',\r\n          icons: {\r\n            first: 'angle double left icon',\r\n            prev: 'left chevron icon',\r\n            next: 'right chevron icon',\r\n            last: 'angle double right icon',\r\n          }\r\n        }\r\n      }\r\n    },\r\n    onEachSide: {\r\n      type: Number,\r\n      default () {\r\n        return 2\r\n      }\r\n    },\r\n  },\r\n  data: function() {\r\n    return {\r\n      eventPrefix: 'vuetable-pagination:',\r\n      tablePagination: null\r\n    }\r\n  },\r\n  computed: {\r\n    totalPage () {\r\n      return this.tablePagination === null\r\n        ? 0\r\n        : this.tablePagination.last_page\r\n    },\r\n    isOnFirstPage () {\r\n      return this.tablePagination === null\r\n        ? false\r\n        : this.tablePagination.current_page === 1\r\n    },\r\n    isOnLastPage () {\r\n      return this.tablePagination === null\r\n        ? false\r\n        : this.tablePagination.current_page === this.tablePagination.last_page\r\n    },\r\n    notEnoughPages () {\r\n      return this.totalPage < (this.onEachSide * 2) + 4\r\n    },\r\n    windowSize () {\r\n      return this.onEachSide * 2 +1;\r\n    },\r\n    windowStart () {\r\n      if (!this.tablePagination || this.tablePagination.current_page <= this.onEachSide) {\r\n        return 1\r\n      } else if (this.tablePagination.current_page >= (this.totalPage - this.onEachSide)) {\r\n        return this.totalPage - this.onEachSide*2\r\n      }\r\n\r\n      return this.tablePagination.current_page - this.onEachSide\r\n    },\r\n  },\r\n  methods: {\r\n    loadPage (page) {\r\n      this.$emit(this.eventPrefix+'change-page', page)\r\n    },\r\n    isCurrentPage (page) {\r\n      return page === this.tablePagination.current_page\r\n    },\r\n    setPaginationData (tablePagination) {\r\n      this.tablePagination = tablePagination\r\n    },\r\n    resetData () {\r\n      this.tablePagination = null\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["VuetablePaginationMixin.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuetablePaginationMixin.vue","sourceRoot":"node_modules/vuetable-2/src/components","sourcesContent":["<script>\r\nexport default {\r\n  props: {\r\n    css: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          wrapperClass: 'ui right floated pagination menu',\r\n          activeClass: 'active large',\r\n          disabledClass: 'disabled',\r\n          pageClass: 'item',\r\n          linkClass: 'icon item',\r\n          paginationClass: 'ui bottom attached segment grid',\r\n          paginationInfoClass: 'left floated left aligned six wide column',\r\n          dropdownClass: 'ui search dropdown',\r\n          icons: {\r\n            first: 'angle double left icon',\r\n            prev: 'left chevron icon',\r\n            next: 'right chevron icon',\r\n            last: 'angle double right icon',\r\n          }\r\n        }\r\n      }\r\n    },\r\n    onEachSide: {\r\n      type: Number,\r\n      default () {\r\n        return 2\r\n      }\r\n    },\r\n  },\r\n  data: function() {\r\n    return {\r\n      eventPrefix: 'vuetable-pagination:',\r\n      tablePagination: null\r\n    }\r\n  },\r\n  computed: {\r\n    totalPage () {\r\n      return this.tablePagination === null\r\n        ? 0\r\n        : this.tablePagination.last_page\r\n    },\r\n    isOnFirstPage () {\r\n      return this.tablePagination === null\r\n        ? false\r\n        : this.tablePagination.current_page === 1\r\n    },\r\n    isOnLastPage () {\r\n      return this.tablePagination === null\r\n        ? false\r\n        : this.tablePagination.current_page === this.tablePagination.last_page\r\n    },\r\n    notEnoughPages () {\r\n      return this.totalPage < (this.onEachSide * 2) + 4\r\n    },\r\n    windowSize () {\r\n      return this.onEachSide * 2 +1;\r\n    },\r\n    windowStart () {\r\n      if (!this.tablePagination || this.tablePagination.current_page <= this.onEachSide) {\r\n        return 1\r\n      } else if (this.tablePagination.current_page >= (this.totalPage - this.onEachSide)) {\r\n        return this.totalPage - this.onEachSide*2\r\n      }\r\n\r\n      return this.tablePagination.current_page - this.onEachSide\r\n    },\r\n  },\r\n  methods: {\r\n    loadPage (page) {\r\n      this.$emit(this.eventPrefix+'change-page', page)\r\n    },\r\n    isCurrentPage (page) {\r\n      return page === this.tablePagination.current_page\r\n    },\r\n    setPaginationData (tablePagination) {\r\n      this.tablePagination = tablePagination\r\n    },\r\n    resetData () {\r\n      this.tablePagination = null\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}