{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-preloader/VuesticPreLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-preloader/VuesticPreLoader.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport { color, lightness } from 'kewler'\n\nexport default {\n  name: 'vuestic-pre-loader',\n  methods: {\n    getPrevious (index) {\n      if (index === 0) return this.points.length - 1\n      else return index - 1\n    },\n    getNext (index) {\n      if (index + 1 === this.points.length) {\n        return 0\n      } else {\n        return index + 1\n      }\n    },\n    setNextLighten (index) {\n      let lighten = this.points[index].lighten\n      this.points[index].lighten = lighten === 8 ? 1 : lighten + 1\n    },\n    draw () {\n      let ctx = this.context\n      ctx.clearRect(0, 0, 140, 104)\n      let padding = 4\n      this.points.forEach(point => {\n        ctx.beginPath()\n        let delta = this.radius + padding\n        ctx.arc(point.x + delta, point.y + delta, this.radius, 0, Math.PI * 2, false)\n        ctx.fillStyle = this.color(lightness(point.lighten / 10 * 35))()\n        ctx.fill()\n      })\n      let main = this.points[this.mainIndex]\n      let delta = this.mainRadius - this.radius + padding\n      ctx.beginPath()\n      ctx.arc(main.x + delta, main.y + delta, this.mainRadius, 0, Math.PI * 2, false)\n      ctx.fillStyle = this.color()\n      ctx.fill()\n      ctx.closePath()\n    },\n    calculate () {\n      this.mainIndex = this.getNext(this.mainIndex)\n      let prevIndex = this.mainIndex\n      for (let i = 0; i <= 7; i++) {\n        prevIndex = this.getPrevious(prevIndex)\n        this.setNextLighten(prevIndex)\n      }\n    },\n    update () {\n      this.calculate()\n      this.draw()\n    },\n    animate () {\n      this.interval = setInterval(this.update, 30)\n    },\n    stop () {\n      clearInterval(this.interval)\n    },\n  },\n  mounted () {\n    this.context = this.$refs.canvas.getContext('2d')\n    this.points = this.points.map(point => {\n      return {\n        lighten: 8,\n        ...point\n      }\n    })\n    for (let i = 1; i <= 7; i++) {\n      this.points[this.mainIndex - i].lighten = i\n    }\n    this.draw()\n    this.animate()\n  },\n  data () {\n    return {\n      points: require('./points.json'),\n      color: color(this.$store.state.app.config.palette.primary),\n      mainIndex: 7,\n      context: {},\n      radius: 4,\n      mainRadius: 8,\n      interval: {},\n    }\n  },\n}\n",{"version":3,"sources":["VuesticPreLoader.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticPreLoader.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-preloader","sourcesContent":["<template>\n  <div class=\"vuestic-pre-loader\">\n    <canvas ref=\"canvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { color, lightness } from 'kewler'\n\nexport default {\n  name: 'vuestic-pre-loader',\n  methods: {\n    getPrevious (index) {\n      if (index === 0) return this.points.length - 1\n      else return index - 1\n    },\n    getNext (index) {\n      if (index + 1 === this.points.length) {\n        return 0\n      } else {\n        return index + 1\n      }\n    },\n    setNextLighten (index) {\n      let lighten = this.points[index].lighten\n      this.points[index].lighten = lighten === 8 ? 1 : lighten + 1\n    },\n    draw () {\n      let ctx = this.context\n      ctx.clearRect(0, 0, 140, 104)\n      let padding = 4\n      this.points.forEach(point => {\n        ctx.beginPath()\n        let delta = this.radius + padding\n        ctx.arc(point.x + delta, point.y + delta, this.radius, 0, Math.PI * 2, false)\n        ctx.fillStyle = this.color(lightness(point.lighten / 10 * 35))()\n        ctx.fill()\n      })\n      let main = this.points[this.mainIndex]\n      let delta = this.mainRadius - this.radius + padding\n      ctx.beginPath()\n      ctx.arc(main.x + delta, main.y + delta, this.mainRadius, 0, Math.PI * 2, false)\n      ctx.fillStyle = this.color()\n      ctx.fill()\n      ctx.closePath()\n    },\n    calculate () {\n      this.mainIndex = this.getNext(this.mainIndex)\n      let prevIndex = this.mainIndex\n      for (let i = 0; i <= 7; i++) {\n        prevIndex = this.getPrevious(prevIndex)\n        this.setNextLighten(prevIndex)\n      }\n    },\n    update () {\n      this.calculate()\n      this.draw()\n    },\n    animate () {\n      this.interval = setInterval(this.update, 30)\n    },\n    stop () {\n      clearInterval(this.interval)\n    },\n  },\n  mounted () {\n    this.context = this.$refs.canvas.getContext('2d')\n    this.points = this.points.map(point => {\n      return {\n        lighten: 8,\n        ...point\n      }\n    })\n    for (let i = 1; i <= 7; i++) {\n      this.points[this.mainIndex - i].lighten = i\n    }\n    this.draw()\n    this.animate()\n  },\n  data () {\n    return {\n      points: require('./points.json'),\n      color: color(this.$store.state.app.config.palette.primary),\n      mainIndex: 7,\n      context: {},\n      radius: 4,\n      mainRadius: 8,\n      interval: {},\n    }\n  },\n}\n</script>\n"]}]}