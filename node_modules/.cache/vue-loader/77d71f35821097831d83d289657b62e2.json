{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-datatable/VuesticDataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-datatable/VuesticDataTable.vue","mtime":1563286052645},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vuetable from 'vuetable-2/src/components/Vuetable'\nimport VuetablePagination from 'vuetable-2/src/components/VuetablePagination'\nimport FilterBar from './datatable-components/FilterBar.vue'\nimport ItemsPerPage from './datatable-components/ItemsPerPage.vue'\nimport DefaultPerPageDefinition from './data/items-per-page-definition'\nimport QueryParams from './data/query-params'\nimport Vue from 'vue'\nimport DataTableStyles from '../vuestic-datatable/data/data-table-styles'\nimport SpringSpinner from 'epic-spinners/src/components/lib/SpringSpinner'\n\nexport default {\n  name: 'vuestic-data-table',\n  components: {\n    SpringSpinner,\n    FilterBar,\n    Vuetable,\n    VuetablePagination,\n    ItemsPerPage,\n  },\n  props: {\n    apiUrl: {\n      type: String,\n    },\n    paginationOn: {\n      type: Boolean,\n      default: true\n    },\n    onFilterCustom: {\n      type: String,\n      default: null\n    },\n    httpFetch: {\n      type: Function,\n      default: null,\n    },\n    httpOptions: {\n      type: Object,\n      default: () => {\n      },\n    },\n    filterQuery: {\n      type: String,\n      default: 'filter',\n    },\n    tableFields: {\n      type: Array,\n      required: true,\n    },\n    itemsPerPage: {\n      type: Array,\n      default: () => DefaultPerPageDefinition.itemsPerPage,\n    },\n    perPageSelectorShown: {\n      type: Boolean,\n      default: true,\n    },\n    filterInputShown: {\n      type: Boolean,\n      default: true,\n    },\n    filterInputLabel: {\n      type: String,\n      default: 'Search',\n    },\n    itemsPerPageLabel: {\n      type: String,\n      default: 'per page',\n    },\n    defaultPerPage: {\n      type: Number,\n      default: DefaultPerPageDefinition.itemsPerPage[0].value,\n    },\n    onEachSide: {\n      type: Number,\n      default: 2,\n    },\n    apiMode: {\n      type: Boolean,\n      default: true,\n    },\n    tableData: {\n      type: Object,\n      default () {\n        return {\n          data: [],\n        }\n      },\n    },\n    dataModeFilterableFields: {\n      type: Array,\n      default: () => [],\n    },\n    sortFunctions: {\n      type: Object,\n    },\n    paginationPath: {\n      type: String,\n      default: '',\n    },\n    queryParams: {\n      type: Object,\n      default: () => QueryParams,\n    },\n    appendParams: {\n      type: Object,\n      default () {\n        return {}\n      },\n    },\n  },\n  data () {\n    return {\n      perPage: 0,\n      colorClasses: {},\n      filterText: '',\n      dataCount: 0,\n      css: DataTableStyles,\n      loading: false,\n      noDataTemplate: '',\n    }\n  },\n  watch: {\n    onFilterCustom: function (val) {\n      this.onFilterSet(val)\n    }\n  },\n  computed: {\n    controlsAlignmentClass () {\n      return {\n        'justify--space-between': this.filterInputShown,\n        'justify--end': !this.filterInputShown,\n      }\n    },\n    moreParams () {\n      // HACK\n      // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n      this.appendParams[this.filterQuery] = this.filterText\n      return this.appendParams\n    },\n    dataModeFilterableFieldsComputed () {\n      const dataItem = this.tableData.data[0] || {}\n      const filterableFields = this.dataModeFilterableFields\n      if (!filterableFields.length) {\n        const itemFields = Object.keys(dataItem)\n        itemFields.forEach(field => {\n          if (typeof dataItem[field] !== 'object') {\n            filterableFields.push(field)\n          }\n        })\n      }\n\n      return filterableFields\n    },\n    filteredTableData () {\n      const txt = new RegExp(this.filterText, 'i')\n\n      let filteredData = this.tableData.data.slice()\n\n      filteredData = this.tableData.data.filter((item) => {\n        return this.dataModeFilterableFieldsComputed.some(field => {\n          const val = item[field] + ''\n          return val.search(txt) >= 0\n        })\n      })\n      return {\n        data: filteredData,\n      }\n    },\n    defaultPerPageComputed () {\n      let defaultPerPage = DefaultPerPageDefinition.itemsPerPage[0].value\n      if (this.$options.propsData.defaultPerPage) {\n        defaultPerPage = this.$options.propsData.defaultPerPage\n      } else if (this.$options.propsData.itemsPerPage) {\n        defaultPerPage = this.$options.propsData.itemsPerPage[0].value\n      }\n\n      return defaultPerPage\n    },\n    paginationPathComputed () {\n      return this.apiMode ? this.paginationPath : 'pagination'\n    },\n  },\n\n  created () {\n    this.perPage = this.defaultPerPageComputed\n  },\n\n  mounted () {\n    this.$emit('initialized', this.$refs.vuetable)\n  },\n\n  methods: {\n    onFilterSet (filterText) {\n      this.filterText = filterText\n      Vue.nextTick(() => this.$refs.vuetable.refresh())\n    },\n    onItemsPerPage (itemsPerPageValue) {\n      this.perPage = itemsPerPageValue\n      Vue.nextTick(() => this.$refs.vuetable.refresh())\n    },\n    onPaginationData (paginationData) {\n      this.$refs.pagination.setPaginationData(paginationData)\n    },\n    onChangePage (page) {\n      this.$refs.vuetable.changePage(page)\n    },\n    dataManager (sortOrder, pagination) {\n      let data = this.filteredTableData.data\n      let sortFunctions = this.sortFunctions\n\n      if (sortOrder.length > 0) {\n        data.sort(function (item1, item2) {\n          const sortField = sortOrder[0].sortField\n          let fn = sortFunctions[sortField]\n          if (fn) {\n            return fn(item1[sortField], item2[sortField])\n          }\n        })\n\n        if (sortOrder[0].direction === 'desc') {\n          data.reverse()\n        }\n      }\n\n      pagination = this.$refs.vuetable.makePagination(data.length)\n\n      return {\n        pagination: pagination,\n        data: data.slice(pagination.from - 1, pagination.to),\n      }\n    },\n    onLoading () {\n      this.noDataTemplate = ''\n      this.loading = true\n      this.$emit('vuestic:loading')\n    },\n    onLoaded () {\n      this.noDataTemplate = this.$t('tables.dataTable.noDataAvailable')\n      this.loading = false\n      this.$emit('vuestic:loaded')\n    },\n  },\n}\n",{"version":3,"sources":["VuesticDataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"VuesticDataTable.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-datatable","sourcesContent":["<template>\n  <div class=\"vuestic-data-table table-responsive\"\n       :class=\"{'data-loading': loading}\">\n    <div class=\"d-flex align--center\"\n         :class=\"controlsAlignmentClass\">\n      <filter-bar\n        @input=\"onFilterSet\"\n        :label=\"filterInputLabel\"\n        v-show=\"filterInputShown\"\n      />\n      <div class=\"datatable-controls flex\">\n        <div class=\"form-group\">\n          <slot name=\"additionalTableControl\"></slot>\n        </div>\n        <items-per-page\n          :options=\"itemsPerPage\"\n          :label=\"itemsPerPageLabel\"\n          :defaultPerPage=\"defaultPerPageComputed\"\n          @items-per-page=\"onItemsPerPage\"\n          v-show=\"perPageSelectorShown\"\n        />\n      </div>\n    </div>\n    <div v-show=\"loading\" class=\"data-table-loading\">\n      <slot name=\"loading\">\n        <spring-spinner\n          slot=\"loading\"\n          :animation-duration=\"2500\"\n          :size=\"70\"\n          color=\"#4ae387\"\n        />\n      </slot>\n    </div>\n    <vuetable\n      ref=\"vuetable\"\n      :apiUrl=\"apiUrl\"\n      :apiMode=\"apiMode\"\n      :httpFetch=\"httpFetch\"\n      :httpOptions=\"httpOptions\"\n      :fields=\"tableFields\"\n      :dataManager=\"dataManager\"\n      :css=\"css.table\"\n      dataPath=\"data\"\n      :paginationPath=\"paginationPathComputed\"\n      :appendParams=\"moreParams\"\n      :perPage=\"perPage\"\n      :queryParams=\"queryParams\"\n      :noDataTemplate=\"noDataTemplate\"\n      @vuetable:pagination-data=\"onPaginationData\"\n      @vuetable:loading=\"onLoading\"\n      @vuetable:loaded=\"onLoaded\"\n    />\n    <div class=\"flex-center\">\n      <vuetable-pagination\n        ref=\"pagination\"\n        :css=\"css.pagination\"\n        :onEachSide=\"onEachSide\"\n        @vuetable-pagination:change-page=\"onChangePage\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vuetable from 'vuetable-2/src/components/Vuetable'\nimport VuetablePagination from 'vuetable-2/src/components/VuetablePagination'\nimport FilterBar from './datatable-components/FilterBar.vue'\nimport ItemsPerPage from './datatable-components/ItemsPerPage.vue'\nimport DefaultPerPageDefinition from './data/items-per-page-definition'\nimport QueryParams from './data/query-params'\nimport Vue from 'vue'\nimport DataTableStyles from '../vuestic-datatable/data/data-table-styles'\nimport SpringSpinner from 'epic-spinners/src/components/lib/SpringSpinner'\n\nexport default {\n  name: 'vuestic-data-table',\n  components: {\n    SpringSpinner,\n    FilterBar,\n    Vuetable,\n    VuetablePagination,\n    ItemsPerPage,\n  },\n  props: {\n    apiUrl: {\n      type: String,\n    },\n    paginationOn: {\n      type: Boolean,\n      default: true\n    },\n    onFilterCustom: {\n      type: String,\n      default: null\n    },\n    httpFetch: {\n      type: Function,\n      default: null,\n    },\n    httpOptions: {\n      type: Object,\n      default: () => {\n      },\n    },\n    filterQuery: {\n      type: String,\n      default: 'filter',\n    },\n    tableFields: {\n      type: Array,\n      required: true,\n    },\n    itemsPerPage: {\n      type: Array,\n      default: () => DefaultPerPageDefinition.itemsPerPage,\n    },\n    perPageSelectorShown: {\n      type: Boolean,\n      default: true,\n    },\n    filterInputShown: {\n      type: Boolean,\n      default: true,\n    },\n    filterInputLabel: {\n      type: String,\n      default: 'Search',\n    },\n    itemsPerPageLabel: {\n      type: String,\n      default: 'per page',\n    },\n    defaultPerPage: {\n      type: Number,\n      default: DefaultPerPageDefinition.itemsPerPage[0].value,\n    },\n    onEachSide: {\n      type: Number,\n      default: 2,\n    },\n    apiMode: {\n      type: Boolean,\n      default: true,\n    },\n    tableData: {\n      type: Object,\n      default () {\n        return {\n          data: [],\n        }\n      },\n    },\n    dataModeFilterableFields: {\n      type: Array,\n      default: () => [],\n    },\n    sortFunctions: {\n      type: Object,\n    },\n    paginationPath: {\n      type: String,\n      default: '',\n    },\n    queryParams: {\n      type: Object,\n      default: () => QueryParams,\n    },\n    appendParams: {\n      type: Object,\n      default () {\n        return {}\n      },\n    },\n  },\n  data () {\n    return {\n      perPage: 0,\n      colorClasses: {},\n      filterText: '',\n      dataCount: 0,\n      css: DataTableStyles,\n      loading: false,\n      noDataTemplate: '',\n    }\n  },\n  watch: {\n    onFilterCustom: function (val) {\n      this.onFilterSet(val)\n    }\n  },\n  computed: {\n    controlsAlignmentClass () {\n      return {\n        'justify--space-between': this.filterInputShown,\n        'justify--end': !this.filterInputShown,\n      }\n    },\n    moreParams () {\n      // HACK\n      // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n      this.appendParams[this.filterQuery] = this.filterText\n      return this.appendParams\n    },\n    dataModeFilterableFieldsComputed () {\n      const dataItem = this.tableData.data[0] || {}\n      const filterableFields = this.dataModeFilterableFields\n      if (!filterableFields.length) {\n        const itemFields = Object.keys(dataItem)\n        itemFields.forEach(field => {\n          if (typeof dataItem[field] !== 'object') {\n            filterableFields.push(field)\n          }\n        })\n      }\n\n      return filterableFields\n    },\n    filteredTableData () {\n      const txt = new RegExp(this.filterText, 'i')\n\n      let filteredData = this.tableData.data.slice()\n\n      filteredData = this.tableData.data.filter((item) => {\n        return this.dataModeFilterableFieldsComputed.some(field => {\n          const val = item[field] + ''\n          return val.search(txt) >= 0\n        })\n      })\n      return {\n        data: filteredData,\n      }\n    },\n    defaultPerPageComputed () {\n      let defaultPerPage = DefaultPerPageDefinition.itemsPerPage[0].value\n      if (this.$options.propsData.defaultPerPage) {\n        defaultPerPage = this.$options.propsData.defaultPerPage\n      } else if (this.$options.propsData.itemsPerPage) {\n        defaultPerPage = this.$options.propsData.itemsPerPage[0].value\n      }\n\n      return defaultPerPage\n    },\n    paginationPathComputed () {\n      return this.apiMode ? this.paginationPath : 'pagination'\n    },\n  },\n\n  created () {\n    this.perPage = this.defaultPerPageComputed\n  },\n\n  mounted () {\n    this.$emit('initialized', this.$refs.vuetable)\n  },\n\n  methods: {\n    onFilterSet (filterText) {\n      this.filterText = filterText\n      Vue.nextTick(() => this.$refs.vuetable.refresh())\n    },\n    onItemsPerPage (itemsPerPageValue) {\n      this.perPage = itemsPerPageValue\n      Vue.nextTick(() => this.$refs.vuetable.refresh())\n    },\n    onPaginationData (paginationData) {\n      this.$refs.pagination.setPaginationData(paginationData)\n    },\n    onChangePage (page) {\n      this.$refs.vuetable.changePage(page)\n    },\n    dataManager (sortOrder, pagination) {\n      let data = this.filteredTableData.data\n      let sortFunctions = this.sortFunctions\n\n      if (sortOrder.length > 0) {\n        data.sort(function (item1, item2) {\n          const sortField = sortOrder[0].sortField\n          let fn = sortFunctions[sortField]\n          if (fn) {\n            return fn(item1[sortField], item2[sortField])\n          }\n        })\n\n        if (sortOrder[0].direction === 'desc') {\n          data.reverse()\n        }\n      }\n\n      pagination = this.$refs.vuetable.makePagination(data.length)\n\n      return {\n        pagination: pagination,\n        data: data.slice(pagination.from - 1, pagination.to),\n      }\n    },\n    onLoading () {\n      this.noDataTemplate = ''\n      this.loading = true\n      this.$emit('vuestic:loading')\n    },\n    onLoaded () {\n      this.noDataTemplate = this.$t('tables.dataTable.noDataAvailable')\n      this.loading = false\n      this.$emit('vuestic:loaded')\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-data-table {\n  min-height: 24rem;\n\n  .form-group {\n    margin-bottom: 1rem;\n  }\n\n  @media (max-width: 1258px) {\n    .pagination-link-btn:first-child, .pagination-link-btn:last-child {\n      display: none;\n    }\n\n    .pagination-link-btn:nth-child(2) {\n      border-top-left-radius: $btn-border-radius !important;\n      border-bottom-left-radius: $btn-border-radius !important;\n    }\n\n    .pagination-link-btn:nth-last-child(2) {\n      border-top-right-radius: $btn-border-radius !important;\n      border-bottom-right-radius: $btn-border-radius !important;\n    }\n  }\n\n  @media (max-width: 576px) {\n    .hide-not-focused-btn:not(.focus) {\n      display: none;\n    }\n  }\n\n  .data-table-loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 40%;\n    left: 50%;\n  }\n}\n\n.data-loading {\n  opacity: .5;\n  pointer-events: none;\n}\n</style>\n"]}]}