{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/components/ui/icons/IconSet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/components/ui/icons/IconSet.vue","mtime":1563286052633},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'vuestic-icon-set',\n  props: {\n    name: {\n      type: String,\n    },\n\n    sets: {\n      type: Array,\n    },\n  },\n  data () {\n    return {\n      search: '',\n      iconSize: 30,\n      slider: {\n        formatter: v => `${v}px`,\n        min: 20,\n        max: 40,\n      },\n    }\n  },\n  computed: {\n    set () {\n      for (let set of this.sets) {\n        if (set.href === this.name) return set\n      }\n    },\n    filteredLists () {\n      if (!this.search) {\n        // If nothing is searched - we return all sets\n        return this.set.lists\n      }\n\n      const foundIcons = []\n      this.set.lists.forEach(list => {\n        list.icons.forEach(icon => {\n          if (!icon.toUpperCase().includes(this.search.toUpperCase())) {\n            return\n          }\n          // Same icon could be included in different sets.\n          if (foundIcons.includes(icon)) {\n            return\n          }\n          foundIcons.push(icon)\n        })\n      })\n\n      // We return all found icons as a single set.\n      return [{\n        name: 'Found Icons',\n        icons: foundIcons,\n      }]\n    },\n  },\n  methods: {\n    iconClass (icon) {\n      return `${this.set.prefix} ${this.set.prefix}-${icon}`\n    },\n  },\n}\n",{"version":3,"sources":["IconSet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IconSet.vue","sourceRoot":"src/components/ui/icons","sourcesContent":["<template>\n  <div class=\"vuestic-icon-set\">\n    <vuestic-widget class=\"vuestic-icon-set__header\">\n      <div class=\"va-row\">\n        <div class=\" flex md4 xs12 vuestic-icon-set__header__text\">\n          <h2>{{ set.name }}</h2>\n          <router-link :to=\"{ name: 'icon-sets' }\">\n            {{ $t('icons.back') }}\n          </router-link>\n        </div>\n\n        <div class=\" flex md4 xs12\">\n          <div class=\"form-group with-icon-left\">\n            <div class=\"input-group\">\n              <input\n                v-model=\"search\"\n                id=\"input-icon-left\"\n                name=\"input-icon-left\"\n                required\n              />\n              <i class=\"fa fa-search icon-left input-icon\"/>\n              <label class=\"control-label\" for=\"input-icon-left\">\n                {{ $t('icons.search') }}\n              </label>\n              <i class=\"bar\"></i>\n            </div>\n          </div>\n        </div>\n\n        <div class=\" flex md4 xs12 vuestic-icon-set__header__range\">\n          <h4>A</h4>\n          <vuestic-slider\n            :options=\"slider\"\n            v-model=\"iconSize\"\n          >\n          </vuestic-slider>\n          <h2>A</h2>\n        </div>\n      </div>\n    </vuestic-widget>\n\n    <vuestic-widget\n      v-for=\"(list, index) in filteredLists\"\n      :key=\"index\"\n      :headerText=\"list.name\"\n      class=\"flex md12\"\n    >\n      <span v-if=\"list.icons.length === 0\">\n        {{ $t('icons.none') }}\n      </span>\n      <div class=\"va-row\">\n        <div\n          class=\"flex xs3 md1 icon-grid-container\"\n          v-for=\"icon in list.icons\"\n          :key=\"icon\"\n        >\n          <div class=\"vuestic-icon\">\n            <span\n              :class=\"iconClass(icon)\"\n              :style=\"`font-size: ${iconSize}px`\"\n              aria-hidden=\"true\"\n            />\n          </div>\n          <div class=\"icon-text\">\n            {{ icon }}\n          </div>\n        </div>\n      </div>\n    </vuestic-widget>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'vuestic-icon-set',\n  props: {\n    name: {\n      type: String,\n    },\n\n    sets: {\n      type: Array,\n    },\n  },\n  data () {\n    return {\n      search: '',\n      iconSize: 30,\n      slider: {\n        formatter: v => `${v}px`,\n        min: 20,\n        max: 40,\n      },\n    }\n  },\n  computed: {\n    set () {\n      for (let set of this.sets) {\n        if (set.href === this.name) return set\n      }\n    },\n    filteredLists () {\n      if (!this.search) {\n        // If nothing is searched - we return all sets\n        return this.set.lists\n      }\n\n      const foundIcons = []\n      this.set.lists.forEach(list => {\n        list.icons.forEach(icon => {\n          if (!icon.toUpperCase().includes(this.search.toUpperCase())) {\n            return\n          }\n          // Same icon could be included in different sets.\n          if (foundIcons.includes(icon)) {\n            return\n          }\n          foundIcons.push(icon)\n        })\n      })\n\n      // We return all found icons as a single set.\n      return [{\n        name: 'Found Icons',\n        icons: foundIcons,\n      }]\n    },\n  },\n  methods: {\n    iconClass (icon) {\n      return `${this.set.prefix} ${this.set.prefix}-${icon}`\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-icon-set {\n  &__header {\n    padding: 1.75rem 0 1.125rem;\n    background-color: white;\n\n    &__text {\n      padding-left: 2.5rem;\n      text-align: left;\n\n      h2 {\n        margin-top: 0;\n        margin-bottom: 0;\n      }\n    }\n\n    &__range {\n      display: flex;\n      align-items: center;\n      padding-right: 2rem;\n      padding-left: 2rem;\n\n      h2, h4 {\n        flex-grow: 0;\n        margin: .5rem;\n      }\n\n      .vuestic-slider {\n        flex-grow: 1;\n      }\n    }\n\n    margin-bottom: 2rem;\n  }\n\n  .icon-grid-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    position: relative;\n    float: left;\n    height: 6rem;\n    min-height: 1px;\n    margin: 0 0 .5rem;\n    text-align: center;\n\n    &:hover {\n      color: white;\n      background-color: $brand-primary;\n      cursor: pointer;\n    }\n\n    .vuestic-icon {\n      margin: 0 0 1rem;\n      padding: 1rem 0 0;\n    }\n\n    .icon-text {\n      font-size: .6rem;\n      text-align: center;\n    }\n  }\n}\n</style>\n"]}]}