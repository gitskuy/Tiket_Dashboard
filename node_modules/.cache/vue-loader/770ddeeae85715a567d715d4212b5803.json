{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUploadContainer.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUploadContainer.vue","mtime":1563286052649},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vuestic-file-upload-container {\n  position: relative;\n\n  &__field {\n    padding: 0 0 1.3rem;\n    overflow: hidden;\n    display: inline-block;\n    position: relative;\n\n    @media (max-width: 576px) {\n      &--dropzone {\n        flex-direction: column;\n        padding: 0;\n      }\n    }\n\n    &--dropzone {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 10rem;\n      padding: 0 2rem;\n      transition: height .2s;\n      overflow: visible;\n      position: static;\n    }\n\n    &__text {\n      padding-right: 10px;\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      display: block;\n      min-height: 10rem;\n      min-width: 100%;\n      color: transparent;\n      opacity: 0;\n      filter: alpha(opacity=0);\n      cursor: pointer;\n    }\n  }\n}\n\n",{"version":3,"sources":["VuesticFileUploadContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticFileUploadContainer.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-file-upload","sourcesContent":["<template>\n  <div class=\"vuestic-file-upload-container\">\n    <div\n      class=\"vuestic-file-upload-container__field\"\n      :class=\"{'vuestic-file-upload-container__field--dropzone': dropzone}\"\n    >\n      <div\n        class=\"vuestic-file-upload-container__field__text\"\n        v-if=\"dropzone\"\n      >\n        {{ $t('fileUpload.dragNdropFiles') }}\n      </div>\n      <button type=\"button\" class=\"btn btn-primary btn-micro\">\n        {{ $t('fileUpload.uploadFile') }}\n      </button>\n      <input\n        type=\"file\"\n        class=\"vuestic-file-upload-container__field__input\"\n        ref=\"fieldInput\"\n        :accept=\"fileTypes\"\n        :multiple=\"type !== 'single'\"\n        @change=\"changeFieldValue\"\n      >\n    </div>\n    <div class=\"vuestic-file-upload-container__main\">\n      <slot/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'vuestic-file-upload-container',\n  props: {\n    dropzone: {\n      type: Boolean,\n      default: false,\n    },\n    fileTypes: {\n      type: String,\n    },\n    type: {\n      type: String,\n    },\n  },\n  methods: {\n    changeFieldValue (e) {\n      this.$emit('upload', e)\n      this.$refs.fieldInput.value = ''\n    },\n  },\n}\n</script>\n\n<style lang='scss'>\n.vuestic-file-upload-container {\n  position: relative;\n\n  &__field {\n    padding: 0 0 1.3rem;\n    overflow: hidden;\n    display: inline-block;\n    position: relative;\n\n    @media (max-width: 576px) {\n      &--dropzone {\n        flex-direction: column;\n        padding: 0;\n      }\n    }\n\n    &--dropzone {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 10rem;\n      padding: 0 2rem;\n      transition: height .2s;\n      overflow: visible;\n      position: static;\n    }\n\n    &__text {\n      padding-right: 10px;\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      display: block;\n      min-height: 10rem;\n      min-width: 100%;\n      color: transparent;\n      opacity: 0;\n      filter: alpha(opacity=0);\n      cursor: pointer;\n    }\n  }\n}\n\n</style>\n"]}]}