{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-tree-view/VuesticTreeCategory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-tree-view/VuesticTreeCategory.vue","mtime":1563286052657},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SquareWithIcon from './vuestic-div-checkbox/SquareWithIcon.vue'\nimport VuesticCheckbox from '../vuestic-checkbox/VuesticCheckbox'\n\nexport default {\n  name: 'vuestic-tree-category',\n  components: { SquareWithIcon, VuesticCheckbox },\n  data () {\n    return {\n      isOpenCached: false,\n    }\n  },\n  watch: {\n    isOpen: {\n      handler (isOpen) {\n        this.isOpenCached = isOpen\n      },\n      immediate: true,\n    },\n  },\n  props: {\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    checkboxIconClass () {\n      return this.isOpenCached ? 'ion ion-md-remove' : 'ion ion-md-add'\n    },\n  },\n  methods: {\n    /**\n     * @public\n     */\n    collapse () {\n      this.isOpenCached = false\n      this.$nextTick(() => {\n        this.$children.forEach(child => {\n          if (child.$options.name === 'vuestic-tree-category') {\n            child.collapse()\n          }\n        })\n      })\n    },\n    /**\n     * @public\n     */\n    expand () {\n      this.isOpenCached = true\n      this.$nextTick(() => {\n        this.$children.forEach(child => {\n          if (child.$options.name === 'vuestic-tree-category') {\n            child.expand()\n          }\n        })\n      })\n    },\n  },\n}\n",{"version":3,"sources":["VuesticTreeCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticTreeCategory.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-tree-view","sourcesContent":["<template>\n  <div class=\"vuestic-tree-category\">\n    <div class=\"vuestic-tree-category__header\"\n         @click=\"isOpenCached = ! isOpenCached\">\n      <div class=\"vuestic-tree-category__header-checkbox\">\n        <square-with-icon :iconClass=\"checkboxIconClass\"/>\n      </div>\n      <div class=\"vuestic-tree-category__header-icon\"\n           v-if=\"$slots.icon\"\n      >\n        <slot name=\"icon\"/>\n      </div>\n      <div class=\"vuestic-tree-category__header-label\">\n        {{ label }}\n      </div>\n    </div>\n\n    <div class=\"vuestic-tree-category__list-container\" v-if=\"isOpenCached\">\n      <div class=\"vuestic-tree-category__list-internal-container\">\n        <slot></slot>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport SquareWithIcon from './vuestic-div-checkbox/SquareWithIcon.vue'\nimport VuesticCheckbox from '../vuestic-checkbox/VuesticCheckbox'\n\nexport default {\n  name: 'vuestic-tree-category',\n  components: { SquareWithIcon, VuesticCheckbox },\n  data () {\n    return {\n      isOpenCached: false,\n    }\n  },\n  watch: {\n    isOpen: {\n      handler (isOpen) {\n        this.isOpenCached = isOpen\n      },\n      immediate: true,\n    },\n  },\n  props: {\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    checkboxIconClass () {\n      return this.isOpenCached ? 'ion ion-md-remove' : 'ion ion-md-add'\n    },\n  },\n  methods: {\n    /**\n     * @public\n     */\n    collapse () {\n      this.isOpenCached = false\n      this.$nextTick(() => {\n        this.$children.forEach(child => {\n          if (child.$options.name === 'vuestic-tree-category') {\n            child.collapse()\n          }\n        })\n      })\n    },\n    /**\n     * @public\n     */\n    expand () {\n      this.isOpenCached = true\n      this.$nextTick(() => {\n        this.$children.forEach(child => {\n          if (child.$options.name === 'vuestic-tree-category') {\n            child.expand()\n          }\n        })\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-tree-category {\n  &__header {\n    cursor: pointer;\n    display: flex;\n  }\n  &__header-checkbox {\n    margin-right: 0.75rem;\n  }\n  &__header-icon {\n    margin-right: 0.375rem;\n  }\n  &__header-label {\n    word-wrap: break-word;\n    overflow: hidden;\n  }\n  &__list-container {\n    margin-top: 0.625rem;\n    padding-left: 0.6875rem;\n  }\n  &__list-internal-container {\n    border-left: dashed 0.0625rem $lighter-gray;\n    padding-left: 1.5rem;\n  }\n  // List items require padding. Somewhat hacky, but the only remaining option is using render functions.\n  .vuestic-tree-category + .vuestic-tree-category, .vuestic-tree-node + .vuestic-tree-node, .vuestic-tree-category + .vuestic-tree-node, .vuestic-tree-node + .vuestic-tree-category {\n    margin-top: 0.625rem;\n  }\n}\n</style>\n"]}]}