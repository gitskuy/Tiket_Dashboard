{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUpload.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUpload.vue","mtime":1563286052649},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vuestic-file-upload {\n  &--dropzone {\n    background-color: $lighter-green;\n    padding: 0 2rem;\n    overflow: hidden;\n  }\n}\n\n// Maybe we should create new component for text button\n.btn-text {\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n\n  & + & {\n    margin-left: 1.5rem;\n  }\n\n  &--primary {\n    color: $vue-green;\n\n    &:hover {\n      opacity: 0.6;\n    }\n  }\n\n  &--secondary {\n    color: $white;\n  }\n}\n\n@media (max-width: 576px) {\n  .vuestic-file-upload {\n    &--dropzone {\n      padding: 0 1rem;\n    }\n  }\n}\n",{"version":3,"sources":["VuesticFileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticFileUpload.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-file-upload","sourcesContent":["<template>\n  <div class=\"vuestic-file-upload\"\n       :class=\"{'vuestic-file-upload--dropzone': dropzone}\">\n    <vuestic-file-upload-container\n      :type=\"type\"\n      :fileTypes=\"fileTypes\"\n      :dropzone=\"dropzone\"\n      @upload=\"uploadFile\"\n    >\n      <vuestic-file-upload-list\n        v-if=\"files.length\"\n        :type=\"type\"\n        :files=\"files\"\n        @remove=\"removeFile\"\n        @remove-single=\"removeSingleFile\"\n      />\n      <vuestic-modal ref=\"mediumModal\" :no-buttons=\"true\">\n        <div slot=\"title\">{{ $t('fileUpload.modalTitle') }}</div>\n        <div>\n          {{ $t('fileUpload.modalText') }}\n        </div>\n      </vuestic-modal>\n    </vuestic-file-upload-container>\n  </div>\n</template>\n\n<script>\nimport VuesticFileUploadList from './VuesticFileUploadList'\nimport VuesticFileUploadContainer from './VuesticFileUploadContainer'\n\nexport default {\n  name: 'vuestic-file-upload',\n  components: {\n    VuesticFileUploadList: VuesticFileUploadList,\n    VuesticFileUploadContainer: VuesticFileUploadContainer,\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'list',\n      validator: function (value) {\n        return ['list', 'gallery', 'single'].indexOf(value) !== -1\n      },\n    },\n    fileTypes: {\n      type: String,\n      default: '',\n    },\n    dropzone: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      default: () => [],\n    },\n  },\n  methods: {\n    uploadFile (e) {\n      let files = e.target.files || e.dataTransfer.files\n\n      // type validation\n      if (this.fileTypes) {\n        files = this.validateFileTypes(files)\n      }\n      this.files = [...this.files, ...files]\n    },\n    removeFile (index) {\n      this.files.splice(index, 1)\n    },\n    removeSingleFile () {\n      this.files = []\n    },\n    validateFileTypes (files) {\n      return [...files].filter(file => {\n        const fileName = file.name\n        const extn = fileName.substring(fileName.lastIndexOf('.') + 1)\n          .toLowerCase()\n        if (this.fileTypes.indexOf(extn) === -1) {\n          this.$refs.mediumModal.open()\n        }\n        return this.fileTypes.indexOf(extn) !== -1\n      })\n    },\n  },\n  computed: {\n    files: {\n      get () {\n        return this.value\n      },\n      set (files) {\n        this.$emit('input', files)\n      },\n    },\n  },\n}\n</script>\n\n<style lang='scss'>\n.vuestic-file-upload {\n  &--dropzone {\n    background-color: $lighter-green;\n    padding: 0 2rem;\n    overflow: hidden;\n  }\n}\n\n// Maybe we should create new component for text button\n.btn-text {\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n\n  & + & {\n    margin-left: 1.5rem;\n  }\n\n  &--primary {\n    color: $vue-green;\n\n    &:hover {\n      opacity: 0.6;\n    }\n  }\n\n  &--secondary {\n    color: $white;\n  }\n}\n\n@media (max-width: 576px) {\n  .vuestic-file-upload {\n    &--dropzone {\n      padding: 0 1rem;\n    }\n  }\n}\n</style>\n"]}]}