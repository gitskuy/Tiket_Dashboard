{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-progress-bar/VuesticProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-progress-bar/VuesticProgressBar.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HorizontalBar from './progress-types/HorizontalProgressBar.vue'\nimport VerticalBar from './progress-types/VerticalProgressBar.vue'\nimport CircleBar from './progress-types/CircleProgressBar.vue'\n\nexport default {\n  name: 'vuestic-progress-bar',\n  components: {\n    HorizontalBar,\n    VerticalBar,\n    CircleBar,\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0,\n      validator: function (value) {\n        return value >= 0 && value <= 100\n      },\n    },\n    text: {\n      type: String,\n      default: '',\n    },\n    theme: {\n      type: String,\n      default: 'Primary',\n    },\n    backgroundTheme: {\n      type: String,\n      default: 'White',\n    },\n    type: {\n      type: String,\n      default: 'horizontal',\n    },\n    size: {\n      type: String,\n      default: 'basic',\n      validator: function (value) {\n        return ['thin', 'thick', 'basic'].indexOf(value) !== -1\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    animated: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data () {\n    return {\n      transformedValue: 0,\n      valueAnimationInterval: 5000,\n    }\n  },\n  mounted () {\n    if (this.type === 'circle' && this.animated) {\n      this.animateValue()\n    } else {\n      this.transformedValue = this.value\n    }\n  },\n  methods: {\n    animateValue () {\n      let valueMsecs = this.valueAnimationInterval / 200\n      let delta = Math.sign(this.value - this.transformedValue)\n      let valueInterval = setInterval(() => {\n        if (this.transformedValue === this.value) {\n          clearInterval(valueInterval)\n        } else {\n          this.transformedValue += delta\n        }\n      }, valueMsecs)\n    },\n  },\n}\n",{"version":3,"sources":["VuesticProgressBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VuesticProgressBar.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-progress-bar","sourcesContent":["<template>\n  <div class=\"vuestic-progress-bar\">\n    <horizontal-bar\n      :value=\"transformedValue\"\n      :text=\"text\"\n      :size=\"size\"\n      :disabled=\"disabled\"\n      :animated=\"animated\"\n      :theme=\"theme\"\n      v-if=\"type == 'horizontal'\"\n    />\n    <vertical-bar\n      :value=\"transformedValue\"\n      :text=\"text\"\n      :size=\"size\"\n      :disabled=\"disabled\"\n      :animated=\"animated\"\n      :theme=\"theme\"\n      v-if=\"type == 'vertical'\"\n    />\n    <circle-bar\n      :value=\"transformedValue\"\n      :text=\"text\"\n      :disabled=\"disabled\"\n      :animated=\"animated\"\n      :theme=\"theme\"\n      :background-theme=\"backgroundTheme\"\n      v-if=\"type == 'circle'\"\n    />\n  </div>\n</template>\n\n<script>\nimport HorizontalBar from './progress-types/HorizontalProgressBar.vue'\nimport VerticalBar from './progress-types/VerticalProgressBar.vue'\nimport CircleBar from './progress-types/CircleProgressBar.vue'\n\nexport default {\n  name: 'vuestic-progress-bar',\n  components: {\n    HorizontalBar,\n    VerticalBar,\n    CircleBar,\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0,\n      validator: function (value) {\n        return value >= 0 && value <= 100\n      },\n    },\n    text: {\n      type: String,\n      default: '',\n    },\n    theme: {\n      type: String,\n      default: 'Primary',\n    },\n    backgroundTheme: {\n      type: String,\n      default: 'White',\n    },\n    type: {\n      type: String,\n      default: 'horizontal',\n    },\n    size: {\n      type: String,\n      default: 'basic',\n      validator: function (value) {\n        return ['thin', 'thick', 'basic'].indexOf(value) !== -1\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    animated: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data () {\n    return {\n      transformedValue: 0,\n      valueAnimationInterval: 5000,\n    }\n  },\n  mounted () {\n    if (this.type === 'circle' && this.animated) {\n      this.animateValue()\n    } else {\n      this.transformedValue = this.value\n    }\n  },\n  methods: {\n    animateValue () {\n      let valueMsecs = this.valueAnimationInterval / 200\n      let delta = Math.sign(this.value - this.transformedValue)\n      let valueInterval = setInterval(() => {\n        if (this.transformedValue === this.value) {\n          clearInterval(valueInterval)\n        } else {\n          this.transformedValue += delta\n        }\n      }, valueMsecs)\n    },\n  },\n}\n</script>\n"]}]}