{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-simple-select/VuesticSimpleSelect.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-simple-select/VuesticSimpleSelect.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.vuestic-simple-select {\n\n  &__unselect {\n    margin-right: 20px;\n    cursor: pointer;\n  }\n\n  .vuestic-simple-select__dropdown-arrow.vuestic-simple-select__dropdown-arrow {\n    top: 12px;\n    cursor: pointer;\n  }\n\n  &__dropdown-menu {\n    padding: 0;\n\n    .vuestic-scrollbar {\n      max-height: $dropdown-item-height * 4;\n    }\n  }\n}\n",{"version":3,"sources":["VuesticSimpleSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"VuesticSimpleSelect.vue","sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-simple-select","sourcesContent":["<template>\n  <div class=\"vuestic-simple-select\">\n    <div\n      class=\"form-group with-icon-right dropdown select-form-group\"\n      v-dropdown=\"{ isBlocked: true, onDropdownClose: onDropdownClose }\"\n      :class=\"{'has-error': hasErrors()}\"\n    >\n      <div\n        class=\"input-group dropdown-toggle vuestic-simple-select__dropdown-toggle\">\n        <div>\n          <input\n            @focus=\"showDropdown()\"\n            :class=\"{'has-value': !!value}\"\n            v-model=\"displayValue\"\n            :name=\"name\"\n            :options=\"options\"\n          >\n          <label class=\"control-label\">{{label}}</label><i class=\"bar\"/>\n          <small v-show=\"hasErrors()\" class=\"help text-danger\">\n            {{ showRequiredError() }}\n          </small>\n        </div>\n        <i\n          class=\"ion ion-ios-arrow-down icon-right input-icon vuestic-simple-select__dropdown-arrow\"\n          @click=\"showDropdown\"\n        />\n      </div>\n      <div v-if=\"isClearable\">\n        <i\n          class=\"fa fa-close icon-cross icon-right input-icon vuestic-simple-select__unselect\"\n          @click=\"unselectOption\"\n        />\n      </div>\n      <div\n        class=\"dropdown-menu vuestic-simple-select__dropdown-menu\"\n        aria-labelledby=\"dropdownMenuButton\">\n        <scrollbar ref=\"scrollbar\">\n          <div\n            class=\"dropdown-menu-content vuestic-simple-select__dropdown-menu-content\">\n            <div\n              class=\"dropdown-item vuestic-simple-select__dropdown-item\"\n              v-for=\"(option, index) in filteredList\"\n              :key=\"index\"\n              :class=\"{'selected': isOptionSelected(option)}\"\n              @click=\"toggleSelection(option)\"\n            >\n            <span\n              class=\"ellipsis\">{{optionKey ? option[optionKey] : option}}</span>\n            </div>\n          </div>\n        </scrollbar>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropdown from 'vuestic-directives/Dropdown'\nimport Scrollbar from '../vuestic-scrollbar/VuesticScrollbar.vue'\n\nexport default {\n  name: 'vuestic-simple-select',\n  components: {\n    Scrollbar,\n  },\n  directives: {\n    dropdown: Dropdown,\n  },\n  props: {\n    label: String,\n    options: Array,\n    value: {\n      default: '',\n      required: true,\n    },\n    optionKey: String,\n    required: {\n      type: Boolean,\n      default: false,\n    },\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    name: {\n      type: String,\n      default: 'simple-select',\n    },\n  },\n  data () {\n    return {\n      validated: false,\n      displayValue: this.value || '',\n      selectedValue: this.value,\n    }\n  },\n  watch: {\n    value: {\n      handler (value) {\n        if (!value || !this.optionKey) {\n          this.displayValue = value || ''\n          this.selectedValue = value || ''\n          return\n        }\n        this.selectedValue = value[this.optionKey]\n        this.displayValue = value[this.optionKey]\n      },\n      immediate: true,\n    },\n  },\n  computed: {\n    filteredList () {\n      const optionKey = this.optionKey\n      const displayValue = this.displayValue\n      if (displayValue === '') {\n        return this.options\n      } else {\n        // HACK This is done poorly.\n        return this.options.filter(function (item) {\n          if (optionKey && item && item[optionKey]) {\n            // option is object\n            if (displayValue) {\n              return item[optionKey].toLowerCase()\n                .search(displayValue.toLowerCase()) === 0\n            }\n          } else {\n            // option is string\n            return (item + '').toLowerCase()\n              .search(displayValue.toLowerCase()) === 0\n          }\n        })\n      }\n    },\n    isClearable () {\n      return (this.clearable && this.selectedValue !== '' && this.displayValue !== '' && this.selectedValue !== undefined)\n    },\n    placeholder () {\n      if (this.optionKey && this.selectedValue) {\n        return this.selectedValue[this.optionKey]\n      } else {\n        return this.selectedValue\n      }\n    },\n  },\n  methods: {\n    onDropdownClose () {\n      if (!this.value) {\n        this.displayValue = ''\n      }\n      if (this.value && this.optionKey) {\n        this.displayValue = this.value[this.optionKey]\n      }\n    },\n    toggleSelection (option) {\n      this.isOptionSelected(option) ? this.unselectOption() : this.selectOption(option)\n    },\n    unselectOption () {\n      this.selectedValue = ''\n      this.$emit('input', this.selectedValue)\n    },\n    showDropdown () {\n      this.displayValue = ''\n    },\n    isOptionSelected (option) {\n      if (this.optionKey) {\n        return this.selectedValue === option[this.optionKey]\n      } else {\n        return this.selectedValue === option\n      }\n    },\n    selectOption (option) {\n      if (!option) {\n        this.displayValue = ''\n      }\n      if (option && this.optionKey) {\n        this.displayValue = option[this.optionKey]\n      }\n      this.selectedValue = option\n      this.$emit('input', option)\n    },\n    validate () {\n      this.validated = true\n    },\n    isValid () {\n      let isValid = true\n      if (this.required) {\n        isValid = !!this.value\n      }\n      return isValid\n    },\n    hasErrors () {\n      let hasErrors = false\n      if (this.required) {\n        hasErrors = this.validated && !this.value\n      }\n      return hasErrors\n    },\n    showRequiredError () {\n      return `The ${this.name} field is required`\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-simple-select {\n\n  &__unselect {\n    margin-right: 20px;\n    cursor: pointer;\n  }\n\n  .vuestic-simple-select__dropdown-arrow.vuestic-simple-select__dropdown-arrow {\n    top: 12px;\n    cursor: pointer;\n  }\n\n  &__dropdown-menu {\n    padding: 0;\n\n    .vuestic-scrollbar {\n      max-height: $dropdown-item-height * 4;\n    }\n  }\n}\n</style>\n"]}]}