{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-scrollbar/VuesticScrollbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-scrollbar/VuesticScrollbar.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar browser = require('detect-browser');\n\nvar erd = require('element-resize-detector')();\n\nexport default {\n  name: 'vuestic-scrollbar',\n  props: {\n    speed: {\n      default: 20\n    }\n  },\n  methods: {\n    calcSize: function calcSize() {\n      this.isDown = this.isUp = false;\n      this.maxHeight = parseFloat(this.wrapper.offsetHeight, 10);\n      this.contentHeight = parseFloat(this.content.offsetHeight, 10);\n      this.trackHeight = parseFloat(this.track.offsetHeight, 10);\n\n      if (this.maxHeight / this.contentHeight * this.trackHeight < 10) {\n        this.thumb.style.height = 10 + 'px';\n      } else {\n        this.thumb.style.height = this.maxHeight / this.contentHeight * this.trackHeight + 'px';\n      }\n\n      if (this.maxHeight / this.contentHeight < 1) {\n        this.thumb.classList.add('active');\n      } else {\n        this.thumb.classList.remove('active');\n      }\n    },\n    calcThumb: function calcThumb() {\n      var currentMT = this.content.style.marginTop === '' ? 0 : parseInt(this.content.style.marginTop, 10);\n      this.thumb.style.top = -currentMT / this.contentHeight * this.trackHeight + 'px';\n    },\n    onContentResize: function onContentResize() {\n      var _this = this;\n\n      var prevHeight = this.contentHeight;\n      this.calcSize();\n      this.calcThumb();\n      this.content.style.transition = 'margin-top .3s linear';\n      this.thumb.style.transition = 'top .3s linear';\n\n      var handler = function handler(e) {\n        if (e.propertyName === 'margin-top') {\n          _this.content.style.transition = '';\n\n          _this.calcSize();\n\n          _this.calcThumb();\n\n          _this.content.removeEventListener('transitionend', handler);\n\n          _this.thumb.style.transition = '';\n        }\n      };\n\n      this.content.addEventListener('transitionend', handler);\n      this.setVertical(this.contentHeight - prevHeight);\n    },\n    startDrag: function startDrag(e) {\n      this.isDragging = true;\n      this.prevTouch = e.touches[0];\n    },\n    onDrag: function onDrag(e) {\n      if (this.isDragging) {\n        e.preventDefault();\n        var touch = e.touches[0];\n        var delta = this.prevTouch.clientY - touch.clientY;\n        this.setVertical(delta);\n        this.prevTouch = touch;\n      }\n    },\n    stopDrag: function stopDrag(e) {\n      this.isDragging = false;\n    },\n    scroll: function scroll(e) {\n      var delta = e.deltaY * 0.01 * this.speed;\n\n      if (browser.name === 'firefox') {\n        delta *= 10;\n      }\n\n      this.setVertical(delta);\n      e.preventDefault();\n    },\n    setVertical: function setVertical(delta) {\n      if (this.isDown && delta > 0 || this.isUp && delta < 0 || this.contentHeight <= this.maxHeight) {\n        return;\n      }\n\n      var currentMT = this.content.style.marginTop === '' ? 0 : parseFloat(this.content.style.marginTop, 10);\n      var nextMT = 0;\n\n      if (this.maxHeight - (currentMT - delta) > this.contentHeight && delta > 0) {\n        nextMT = this.maxHeight - this.contentHeight;\n        this.isDown = true;\n      } else {\n        this.isDown = false;\n\n        if (currentMT - delta > 0) {\n          this.isUp = true;\n          nextMT = 0;\n        } else {\n          nextMT = currentMT - delta;\n          this.isUp = false;\n        }\n      }\n\n      this.content.style.marginTop = nextMT + 'px';\n      this.calcThumb();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.track = this.$refs.track;\n    this.thumb = this.$refs.thumb;\n    this.content = this.$refs.scrollbarContent;\n    this.wrapper = this.$refs.scrollbarWrapper;\n    this.calcSize();\n    this.calcThumb();\n    erd.listenTo(this.content, function () {\n      _this2.calcSize();\n\n      _this2.calcThumb();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    erd.removeAllListeners(this.content);\n  },\n  data: function data() {\n    return {\n      wrapper: undefined,\n      maxHeight: undefined,\n      thumb: undefined,\n      track: undefined,\n      trackHeight: undefined,\n      content: undefined,\n      contentHeight: undefined,\n      isDown: false,\n      isUp: true,\n      prevTouch: {},\n      isDragging: false\n    };\n  }\n};",{"version":3,"sources":["VuesticScrollbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,IAAA,UAAA,QAAA,gBAAA,CAAA;;AACA,IAAA,MAAA,QAAA,yBAAA,GAAA;;AAEA,eAAA;AACA,QAAA,mBADA;AAEA,SAAA;AACA,WAAA;AACA,eAAA;AADA;AADA,GAFA;AAOA,WAAA;AACA,YADA,sBACA;AACA,WAAA,MAAA,GAAA,KAAA,IAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,WAAA,KAAA,OAAA,CAAA,YAAA,EAAA,EAAA,CAAA;AACA,WAAA,aAAA,GAAA,WAAA,KAAA,OAAA,CAAA,YAAA,EAAA,EAAA,CAAA;AACA,WAAA,WAAA,GAAA,WAAA,KAAA,KAAA,CAAA,YAAA,EAAA,EAAA,CAAA;;AAEA,UAAA,KAAA,SAAA,GAAA,KAAA,aAAA,GAAA,KAAA,WAAA,GAAA,EAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,SAAA,GAAA,KAAA,aAAA,GAAA,KAAA,WAAA,GAAA,IAAA;AACA;;AAEA,UAAA,KAAA,SAAA,GAAA,KAAA,aAAA,GAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA;AACA;AACA,KAlBA;AAmBA,aAnBA,uBAmBA;AACA,UAAA,YAAA,KAAA,OAAA,CAAA,KAAA,CAAA,SAAA,KAAA,EAAA,GACA,CADA,GAEA,SAAA,KAAA,OAAA,CAAA,KAAA,CAAA,SAAA,EAAA,EAAA,CAFA;AAGA,WAAA,KAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,SAAA,GAAA,KAAA,aAAA,GAAA,KAAA,WAAA,GAAA,IAAA;AACA,KAxBA;AAyBA,mBAzBA,6BAyBA;AAAA;;AACA,UAAA,aAAA,KAAA,aAAA;AACA,WAAA,QAAA;AACA,WAAA,SAAA;AAEA,WAAA,OAAA,CAAA,KAAA,CAAA,UAAA,GAAA,uBAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,gBAAA;;AACA,UAAA,UAAA,SAAA,OAAA,CAAA,CAAA,EAAA;AACA,YAAA,EAAA,YAAA,KAAA,YAAA,EAAA;AACA,gBAAA,OAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;;AACA,gBAAA,QAAA;;AACA,gBAAA,SAAA;;AACA,gBAAA,OAAA,CAAA,mBAAA,CAAA,eAAA,EAAA,OAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,OARA;;AASA,WAAA,OAAA,CAAA,gBAAA,CAAA,eAAA,EAAA,OAAA;AAEA,WAAA,WAAA,CAAA,KAAA,aAAA,GAAA,UAAA;AACA,KA5CA;AA6CA,aA7CA,qBA6CA,CA7CA,EA6CA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,KAhDA;AAiDA,UAjDA,kBAiDA,CAjDA,EAiDA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,UAAA,cAAA;AACA,YAAA,QAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,YAAA,QAAA,KAAA,SAAA,CAAA,OAAA,GAAA,MAAA,OAAA;AACA,aAAA,WAAA,CAAA,KAAA;AACA,aAAA,SAAA,GAAA,KAAA;AACA;AACA,KAzDA;AA0DA,YA1DA,oBA0DA,CA1DA,EA0DA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,KA5DA;AA6DA,UA7DA,kBA6DA,CA7DA,EA6DA;AACA,UAAA,QAAA,EAAA,MAAA,GAAA,IAAA,GAAA,KAAA,KAAA;;AACA,UAAA,QAAA,IAAA,KAAA,SAAA,EAAA;AACA,iBAAA,EAAA;AACA;;AACA,WAAA,WAAA,CAAA,KAAA;AACA,QAAA,cAAA;AACA,KApEA;AAqEA,eArEA,uBAqEA,KArEA,EAqEA;AACA,UAAA,KAAA,MAAA,IAAA,QAAA,CAAA,IAAA,KAAA,IAAA,IAAA,QAAA,CAAA,IAAA,KAAA,aAAA,IAAA,KAAA,SAAA,EAAA;AACA;AACA;;AACA,UAAA,YAAA,KAAA,OAAA,CAAA,KAAA,CAAA,SAAA,KAAA,EAAA,GACA,CADA,GAEA,WAAA,KAAA,OAAA,CAAA,KAAA,CAAA,SAAA,EAAA,EAAA,CAFA;AAGA,UAAA,SAAA,CAAA;;AACA,UAAA,KAAA,SAAA,IAAA,YAAA,KAAA,IAAA,KAAA,aAAA,IAAA,QAAA,CAAA,EAAA;AACA,iBAAA,KAAA,SAAA,GAAA,KAAA,aAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA,OAHA,MAGA;AACA,aAAA,MAAA,GAAA,KAAA;;AACA,YAAA,YAAA,KAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA,GAAA,IAAA;AACA,mBAAA,CAAA;AACA,SAHA,MAGA;AACA,mBAAA,YAAA,KAAA;AACA,eAAA,IAAA,GAAA,KAAA;AACA;AACA;;AAEA,WAAA,OAAA,CAAA,KAAA,CAAA,SAAA,GAAA,SAAA,IAAA;AACA,WAAA,SAAA;AACA;AA7FA,GAPA;AAsGA,SAtGA,qBAsGA;AAAA;;AACA,SAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACA,SAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACA,SAAA,OAAA,GAAA,KAAA,KAAA,CAAA,gBAAA;AACA,SAAA,OAAA,GAAA,KAAA,KAAA,CAAA,gBAAA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;AACA,QAAA,QAAA,CAAA,KAAA,OAAA,EAAA,YAAA;AACA,aAAA,QAAA;;AACA,aAAA,SAAA;AACA,KAHA;AAIA,GAjHA;AAkHA,eAlHA,2BAkHA;AACA,QAAA,kBAAA,CAAA,KAAA,OAAA;AACA,GApHA;AAqHA,MArHA,kBAqHA;AACA,WAAA;AACA,eAAA,SADA;AAEA,iBAAA,SAFA;AAGA,aAAA,SAHA;AAIA,aAAA,SAJA;AAKA,mBAAA,SALA;AAMA,eAAA,SANA;AAOA,qBAAA,SAPA;AAQA,cAAA,KARA;AASA,YAAA,IATA;AAUA,iBAAA,EAVA;AAWA,kBAAA;AAXA,KAAA;AAaA;AAnIA,CAAA","sourcesContent":["<template>\n  <div class=\"vuestic-scrollbar\" ref=\"vuesticScrollbar\">\n    <div class=\"scrollbar-wrapper\" ref=\"scrollbarWrapper\">\n      <div class=\"scrollbar-content\" ref=\"scrollbarContent\"\n           @wheel=\"scroll\"\n           @touchstart=\"startDrag\"\n           @touchmove=\"onDrag\"\n           @touchend=\"stopDrag\"\n           @transitionend=\"onContentResize\"\n      >\n        <slot/>\n      </div>\n      <div class=\"track\" ref=\"track\">\n        <div class=\"thumb\" ref=\"thumb\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst browser = require('detect-browser')\nconst erd = require('element-resize-detector')()\n\nexport default {\n  name: 'vuestic-scrollbar',\n  props: {\n    speed: {\n      default: 20,\n    },\n  },\n  methods: {\n    calcSize () {\n      this.isDown = this.isUp = false\n      this.maxHeight = parseFloat(this.wrapper.offsetHeight, 10)\n      this.contentHeight = parseFloat(this.content.offsetHeight, 10)\n      this.trackHeight = parseFloat(this.track.offsetHeight, 10)\n\n      if (this.maxHeight / this.contentHeight * this.trackHeight < 10) {\n        this.thumb.style.height = 10 + 'px'\n      } else {\n        this.thumb.style.height = this.maxHeight / this.contentHeight * this.trackHeight + 'px'\n      }\n\n      if (this.maxHeight / this.contentHeight < 1) {\n        this.thumb.classList.add('active')\n      } else {\n        this.thumb.classList.remove('active')\n      }\n    },\n    calcThumb () {\n      let currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseInt(this.content.style.marginTop, 10)\n      this.thumb.style.top = (-currentMT / this.contentHeight * this.trackHeight) + 'px'\n    },\n    onContentResize () {\n      let prevHeight = this.contentHeight\n      this.calcSize()\n      this.calcThumb()\n\n      this.content.style.transition = 'margin-top .3s linear'\n      this.thumb.style.transition = 'top .3s linear'\n      let handler = (e) => {\n        if (e.propertyName === 'margin-top') {\n          this.content.style.transition = ''\n          this.calcSize()\n          this.calcThumb()\n          this.content.removeEventListener('transitionend', handler)\n          this.thumb.style.transition = ''\n        }\n      }\n      this.content.addEventListener('transitionend', handler)\n\n      this.setVertical(this.contentHeight - prevHeight)\n    },\n    startDrag (e) {\n      this.isDragging = true\n      this.prevTouch = e.touches[0]\n    },\n    onDrag (e) {\n      if (this.isDragging) {\n        e.preventDefault()\n        let touch = e.touches[0]\n        let delta = this.prevTouch.clientY - touch.clientY\n        this.setVertical(delta)\n        this.prevTouch = touch\n      }\n    },\n    stopDrag (e) {\n      this.isDragging = false\n    },\n    scroll (e) {\n      let delta = (e.deltaY * 0.01 * this.speed)\n      if (browser.name === 'firefox') {\n        delta *= 10\n      }\n      this.setVertical(delta)\n      e.preventDefault()\n    },\n    setVertical (delta) {\n      if ((this.isDown && delta > 0) || (this.isUp && delta < 0) || (this.contentHeight <= this.maxHeight)) {\n        return\n      }\n      let currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseFloat(this.content.style.marginTop, 10)\n      let nextMT = 0\n      if (this.maxHeight - (currentMT - delta) > this.contentHeight && delta > 0) {\n        nextMT = this.maxHeight - this.contentHeight\n        this.isDown = true\n      } else {\n        this.isDown = false\n        if (currentMT - delta > 0) {\n          this.isUp = true\n          nextMT = 0\n        } else {\n          nextMT = currentMT - delta\n          this.isUp = false\n        }\n      }\n\n      this.content.style.marginTop = nextMT + 'px'\n      this.calcThumb()\n    },\n  },\n  mounted () {\n    this.track = this.$refs.track\n    this.thumb = this.$refs.thumb\n    this.content = this.$refs.scrollbarContent\n    this.wrapper = this.$refs.scrollbarWrapper\n    this.calcSize()\n    this.calcThumb()\n    erd.listenTo(this.content, () => {\n      this.calcSize()\n      this.calcThumb()\n    })\n  },\n  beforeDestroy () {\n    erd.removeAllListeners(this.content)\n  },\n  data () {\n    return {\n      wrapper: undefined,\n      maxHeight: undefined,\n      thumb: undefined,\n      track: undefined,\n      trackHeight: undefined,\n      content: undefined,\n      contentHeight: undefined,\n      isDown: false,\n      isUp: true,\n      prevTouch: {},\n      isDragging: false,\n    }\n  },\n}\n\n</script>\n\n<style lang=\"scss\">\n.vuestic-scrollbar {\n  background: transparent;\n  transition: all .3s linear;\n  position: relative;\n  .scrollbar-wrapper {\n    box-shadow: $sidebar-box-shadow;\n    position: relative;\n    overflow: hidden;\n    max-height: 100%;\n    .track {\n      width: 5px;\n      position: absolute;\n      right: 0;\n      top: 0;\n      height: 100%;\n      .thumb {\n        transition: height .3s linear, opacity .6s linear;\n        position: absolute;\n        width: 100%;\n        background-color: $vue-green;\n        opacity: 0;\n        &.active {\n          opacity: .3;\n        }\n      }\n    }\n  }\n  &:hover {\n    .thumb.active {\n      opacity: 1 !important;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-scrollbar"}]}