{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/thread-loader/dist/cjs.js!/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/src/directives/ResizeHandler.js","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/directives/ResizeHandler.js","mtime":1563286052637},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import store from 'vuex-store';\nexport default {\n  inserted: function inserted(el) {\n    var checkIsDesktop = function checkIsDesktop() {\n      return window.matchMedia(store.getters.config.windowMatchSizeLg).matches;\n    };\n\n    var prevMatchlg = checkIsDesktop();\n    var sidebar = el.querySelector('.vuestic-sidebar');\n    el.addEventListener('transitionend', function () {\n      store.dispatch('isToggleWithoutAnimation', false);\n    });\n    window.addEventListener('resize', function () {\n      if (checkIsDesktop() && !prevMatchlg) {\n        sidebar.classList.remove('sidebar-hidden');\n      } else if (!checkIsDesktop() && prevMatchlg) {\n        store.dispatch('isToggleWithoutAnimation', true);\n        sidebar.classList.add('sidebar-hidden');\n      }\n\n      prevMatchlg = checkIsDesktop();\n    });\n  }\n};",{"version":3,"sources":["/home/ahmad/tiket/experiments/myproject/src/directives/ResizeHandler.js"],"names":["store","inserted","el","checkIsDesktop","window","matchMedia","getters","config","windowMatchSizeLg","matches","prevMatchlg","sidebar","querySelector","addEventListener","dispatch","classList","remove","add"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAe;AACbC,UADa,oBACHC,EADG,EACC;AACZ,QAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,aAAOC,OAAOC,UAAP,CAAkBL,MAAMM,OAAN,CAAcC,MAAd,CAAqBC,iBAAvC,EAA0DC,OAAjE;AACD,KAFD;;AAIA,QAAIC,cAAcP,gBAAlB;AACA,QAAIQ,UAAUT,GAAGU,aAAH,CAAiB,kBAAjB,CAAd;AAEAV,OAAGW,gBAAH,CAAoB,eAApB,EAAqC,YAAY;AAC/Cb,YAAMc,QAAN,CAAe,0BAAf,EAA2C,KAA3C;AACD,KAFD;AAIAV,WAAOS,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC5C,UAAIV,oBAAoB,CAACO,WAAzB,EAAsC;AACpCC,gBAAQI,SAAR,CAAkBC,MAAlB,CAAyB,gBAAzB;AACD,OAFD,MAEO,IAAI,CAACb,gBAAD,IAAqBO,WAAzB,EAAsC;AAC3CV,cAAMc,QAAN,CAAe,0BAAf,EAA2C,IAA3C;AACAH,gBAAQI,SAAR,CAAkBE,GAAlB,CAAsB,gBAAtB;AACD;;AACDP,oBAAcP,gBAAd;AACD,KARD;AASD;AAtBY,CAAf","sourcesContent":["import store from 'vuex-store'\n\nexport default {\n  inserted (el) {\n    const checkIsDesktop = () => {\n      return window.matchMedia(store.getters.config.windowMatchSizeLg).matches\n    }\n\n    let prevMatchlg = checkIsDesktop()\n    let sidebar = el.querySelector('.vuestic-sidebar')\n\n    el.addEventListener('transitionend', function () {\n      store.dispatch('isToggleWithoutAnimation', false)\n    })\n\n    window.addEventListener('resize', function () {\n      if (checkIsDesktop() && !prevMatchlg) {\n        sidebar.classList.remove('sidebar-hidden')\n      } else if (!checkIsDesktop() && prevMatchlg) {\n        store.dispatch('isToggleWithoutAnimation', true)\n        sidebar.classList.add('sidebar-hidden')\n      }\n      prevMatchlg = checkIsDesktop()\n    })\n  },\n}\n"]}]}