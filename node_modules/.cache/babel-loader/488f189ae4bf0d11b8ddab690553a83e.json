{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-chat/VuesticChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-chat/VuesticChat.vue","mtime":1563286052641},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StickyScroll from 'vuestic-directives/StickyScroll';\nexport default {\n  name: 'vuestic-chat',\n  directives: {\n    StickyScroll: StickyScroll\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      default: '20rem'\n    }\n  },\n  data: function data() {\n    return {\n      inputMessage: ''\n    };\n  },\n  methods: {\n    keyHandler: function keyHandler(event) {\n      if (event.keyCode === 13) {\n        this.sendMessage();\n      }\n    },\n    sendMessage: function sendMessage() {\n      if (this.inputMessage) {\n        this.$emit('input', this.value.concat({\n          text: this.inputMessage,\n          yours: true\n        }));\n        this.inputMessage = '';\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$emit('input', this.value);\n  }\n};",{"version":3,"sources":["VuesticChat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,YAAA,MAAA,iCAAA;AAEA,eAAA;AACA,QAAA,cADA;AAGA,cAAA;AAAA;AAAA,GAHA;AAKA,SAAA;AACA,WAAA;AACA,YAAA,KADA;AAEA,eAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,YAAA;AACA,eAAA;AADA;AALA,GALA;AAeA,MAfA,kBAeA;AACA,WAAA;AACA,oBAAA;AADA,KAAA;AAGA,GAnBA;AAqBA,WAAA;AACA,cADA,sBACA,KADA,EACA;AACA,UAAA,MAAA,OAAA,KAAA,EAAA,EAAA;AACA,aAAA,WAAA;AACA;AACA,KALA;AAOA,eAPA,yBAOA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AACA,gBAAA,KAAA,YADA;AAEA,iBAAA;AAFA,SAAA,CAAA;AAIA,aAAA,YAAA,GAAA,EAAA;AACA;AACA;AAfA,GArBA;AAuCA,SAvCA,qBAuCA;AACA,SAAA,KAAA,CAAA,OAAA,EAAA,KAAA,KAAA;AACA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"vuestic-chat\">\n    <div class=\"chat-body\" :style=\"{'height': height}\"\n         v-sticky-scroll=\"{animate: true, duration: 500}\">\n      <div\n        class=\"chat-message\"\n        v-for=\"(message, index) in value\"\n        :key=\"index\"\n        :class=\"{'yours': message.yours, 'alien': !message.yours}\"\n      >\n        {{message.text}}\n      </div>\n    </div>\n    <div class=\"chat-controls\">\n      <fieldset>\n        <div class=\"form-group form-group-w-btn\">\n          <div class=\"input-group\">\n            <input @keypress=\"keyHandler($event)\" v-model=\"inputMessage\"\n                   required title=\"\"/>\n            <label class=\"control-label\">Your message</label><i class=\"bar\"></i>\n          </div>\n          <div class=\"btn btn-sm btn-primary\" @click=\"sendMessage()\">Send</div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</template>\n\n<script>\nimport StickyScroll from 'vuestic-directives/StickyScroll'\n\nexport default {\n  name: 'vuestic-chat',\n\n  directives: { StickyScroll },\n\n  props: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    height: {\n      default: '20rem',\n    },\n  },\n\n  data () {\n    return {\n      inputMessage: '',\n    }\n  },\n\n  methods: {\n    keyHandler (event) {\n      if (event.keyCode === 13) {\n        this.sendMessage()\n      }\n    },\n\n    sendMessage () {\n      if (this.inputMessage) {\n        this.$emit('input', this.value.concat({\n          text: this.inputMessage,\n          yours: true,\n        }))\n        this.inputMessage = ''\n      }\n    },\n  },\n\n  mounted () {\n    this.$emit('input', this.value)\n  },\n}\n</script>\n\n<style lang='scss' scoped>\n$chat-body-min-height: 18.75rem;\n$chat-body-mb: 1.5rem;\n$chat-message-mb: 0.625rem;\n$chat-message-py: 0.657rem;\n$chat-message-px: 1.375rem;\n$chat-message-br: 0.875rem;\n\n.vuestic-chat {\n  width: 100%;\n}\n\n.chat-body {\n  min-height: $chat-body-min-height;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: $chat-body-mb;\n  overflow: auto;\n}\n\n.chat-message {\n  padding: $chat-message-py $chat-message-px;\n  margin-bottom: $chat-message-mb;\n  border-radius: $chat-message-br;\n  max-width: 70%;\n  overflow-wrap: break-word;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.alien {\n    align-self: flex-start;\n    border-top-left-radius: 0;\n    background-color: $light-gray2;\n  }\n\n  &.yours {\n    align-self: flex-end;\n    border-top-right-radius: 0;\n    background-color: $brand-primary;\n  }\n\n  .chat-message-input {\n    resize: vertical !important;\n  }\n}\n\n</style>\n"],"sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-chat"}]}