{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/components/maps/line-maps/LineMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/components/maps/line-maps/LineMap.vue","mtime":1563286052629},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport 'amcharts3';\nimport 'amcharts3/amcharts/plugins/responsive/responsive.js';\nimport 'amcharts3/amcharts/serial.js';\nimport 'amcharts3/amcharts/themes/light';\nimport 'ammap3';\nimport 'ammap3/ammap/maps/js/worldLow';\nexport default {\n  name: 'line-map',\n  props: ['mapData'],\n  methods: {\n    drawMap: function drawMap() {\n      /* global AmCharts */\n      var map;\n      map = new AmCharts.AmMap();\n      var dataProvider = {\n        mapVar: AmCharts.maps.worldLow\n      };\n      map.areasSettings = {\n        unlistedAreasColor: '#eee',\n        unlistedAreasAlpha: 1,\n        outlineColor: '#fff',\n        outlineThickness: 2\n      };\n      map.imagesSettings = {\n        color: '#6bbfe4',\n        rollOverColor: '#6bbfe4',\n        selectedColor: '#6be59c'\n      };\n      map.linesSettings = {\n        color: '#6bbfe4',\n        alpha: 0.4\n      };\n      dataProvider.linkToObject = this.mapData.mainCity;\n      dataProvider.images = this.mapData.cities;\n      map.dataProvider = dataProvider;\n      map.backgroundZoomsToTop = true;\n      map.linesAboveImages = true;\n      map.write(this.$el);\n    }\n  },\n  mounted: function mounted() {\n    this.drawMap();\n  }\n};",{"version":3,"sources":["LineMap.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,WAAA;AACA,OAAA,qDAAA;AACA,OAAA,8BAAA;AACA,OAAA,iCAAA;AAEA,OAAA,QAAA;AACA,OAAA,+BAAA;AAEA,eAAA;AACA,QAAA,UADA;AAGA,SAAA,CAAA,SAAA,CAHA;AAKA,WAAA;AACA,WADA,qBACA;AACA;AACA,UAAA,GAAA;AAEA,YAAA,IAAA,SAAA,KAAA,EAAA;AAEA,UAAA,eAAA;AACA,gBAAA,SAAA,IAAA,CAAA;AADA,OAAA;AAGA,UAAA,aAAA,GAAA;AACA,4BAAA,MADA;AAEA,4BAAA,CAFA;AAGA,sBAAA,MAHA;AAIA,0BAAA;AAJA,OAAA;AAMA,UAAA,cAAA,GAAA;AACA,eAAA,SADA;AAEA,uBAAA,SAFA;AAGA,uBAAA;AAHA,OAAA;AAKA,UAAA,aAAA,GAAA;AACA,eAAA,SADA;AAEA,eAAA;AAFA,OAAA;AAKA,mBAAA,YAAA,GAAA,KAAA,OAAA,CAAA,QAAA;AACA,mBAAA,MAAA,GAAA,KAAA,OAAA,CAAA,MAAA;AACA,UAAA,YAAA,GAAA,YAAA;AACA,UAAA,oBAAA,GAAA,IAAA;AACA,UAAA,gBAAA,GAAA,IAAA;AAEA,UAAA,KAAA,CAAA,KAAA,GAAA;AACA;AAjCA,GALA;AAyCA,SAzCA,qBAyCA;AACA,SAAA,OAAA;AACA;AA3CA,CAAA","sourcesContent":["<template>\n  <div class='line-map'>\n    Line Map\n  </div>\n</template>\n\n<script>\nimport 'amcharts3'\nimport 'amcharts3/amcharts/plugins/responsive/responsive.js'\nimport 'amcharts3/amcharts/serial.js'\nimport 'amcharts3/amcharts/themes/light'\n\nimport 'ammap3'\nimport 'ammap3/ammap/maps/js/worldLow'\n\nexport default {\n  name: 'line-map',\n\n  props: ['mapData'],\n\n  methods: {\n    drawMap () {\n      /* global AmCharts */\n      let map\n\n      map = new AmCharts.AmMap()\n\n      let dataProvider = {\n        mapVar: AmCharts.maps.worldLow,\n      }\n      map.areasSettings = {\n        unlistedAreasColor: '#eee',\n        unlistedAreasAlpha: 1,\n        outlineColor: '#fff',\n        outlineThickness: 2,\n      }\n      map.imagesSettings = {\n        color: '#6bbfe4',\n        rollOverColor: '#6bbfe4',\n        selectedColor: '#6be59c',\n      }\n      map.linesSettings = {\n        color: '#6bbfe4',\n        alpha: 0.4,\n      }\n\n      dataProvider.linkToObject = this.mapData.mainCity\n      dataProvider.images = this.mapData.cities\n      map.dataProvider = dataProvider\n      map.backgroundZoomsToTop = true\n      map.linesAboveImages = true\n\n      map.write(this.$el)\n    },\n  },\n\n  mounted () {\n    this.drawMap()\n  },\n}\n</script>\n\n<style lang='scss'>\n@import '~ammap3/ammap/ammap.css';\n\n.line-map {\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"src/components/maps/line-maps"}]}