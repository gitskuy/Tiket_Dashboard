{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/epic-spinners/src/components/lib/PixelSpinner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/epic-spinners/src/components/lib/PixelSpinner.vue","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport utils from '../../services/utils';\nexport default {\n  name: 'PixelSpinner',\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 1500\n    },\n    size: {\n      type: Number,\n      default: 70\n    },\n    color: {\n      type: String,\n      default: '#fff'\n    }\n  },\n  data: function data() {\n    return {\n      animationBaseName: 'pixel-spinner-animation',\n      currentAnimationName: ''\n    };\n  },\n  computed: {\n    pixelSize: function pixelSize() {\n      return this.size / 7;\n    },\n    spinnerStyle: function spinnerStyle() {\n      return {\n        width: \"\".concat(this.size, \"px\"),\n        height: \"\".concat(this.size, \"px\")\n      };\n    },\n    spinnerInnerStyle: function spinnerInnerStyle() {\n      return {\n        animationDuration: \"\".concat(this.animationDuration, \"ms\"),\n        animationName: this.currentAnimationName,\n        width: \"\".concat(this.pixelSize, \"px\"),\n        height: \"\".concat(this.pixelSize, \"px\"),\n        backgroundColor: this.color,\n        color: this.color,\n        boxShadow: \"\\n                      \".concat(this.pixelSize * 1.5, \"px \").concat(this.pixelSize * 1.5, \"px 0 0,\\n                      \").concat(this.pixelSize * -1.5, \"px \").concat(this.pixelSize * -1.5, \"px 0 0,\\n                      \").concat(this.pixelSize * 1.5, \"px \").concat(this.pixelSize * -1.5, \"px 0 0,\\n                      \").concat(this.pixelSize * -1.5, \"px \").concat(this.pixelSize * 1.5, \"px 0 0,\\n                      0 \").concat(this.pixelSize * 1.5, \"px 0 0,\\n                      \").concat(this.pixelSize * 1.5, \"px 0 0 0,\\n                      \").concat(this.pixelSize * -1.5, \"px 0 0 0,\\n                      0 \").concat(this.pixelSize * -1.5, \"px 0 0\\n                    \")\n      };\n    }\n  },\n  watch: {\n    '$props': {\n      handler: function handler() {\n        this.updateAnimation();\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.updateAnimation();\n  },\n  methods: {\n    updateAnimation: function updateAnimation() {\n      this.updateAnimationName();\n      utils.appendKeyframes(this.currentAnimationName, this.generateKeyframes());\n    },\n    updateAnimationName: function updateAnimationName() {\n      this.currentAnimationName = \"\".concat(this.animationBaseName, \"-\").concat(Date.now());\n    },\n    generateKeyframes: function generateKeyframes() {\n      return \"\\n      50% {\\n        box-shadow:  \".concat(this.pixelSize * 2, \"px \").concat(this.pixelSize * 2, \"px 0 0,\\n                     \").concat(this.pixelSize * -2, \"px \").concat(this.pixelSize * -2, \"px 0 0,\\n                     \").concat(this.pixelSize * 2, \"px \").concat(this.pixelSize * -2, \"px 0 0,\\n                     \").concat(this.pixelSize * -2, \"px \").concat(this.pixelSize * 2, \"px 0 0,\\n                     0 \").concat(this.pixelSize, \"px 0 0,\\n                     \").concat(this.pixelSize, \"px 0 0 0,\\n                     \").concat(this.pixelSize * -1, \"px 0 0 0,\\n                     0 \").concat(this.pixelSize * -1, \"px 0 0;\\n      }\\n\\n\\n      75% {\\n        box-shadow:  \").concat(this.pixelSize * 2, \"px \").concat(this.pixelSize * 2, \"px 0 0,\\n                     \").concat(this.pixelSize * -2, \"px \").concat(this.pixelSize * -2, \"px 0 0,\\n                     \").concat(this.pixelSize * 2, \"px \").concat(this.pixelSize * -2, \"px 0 0,\\n                     \").concat(this.pixelSize * -2, \"px \").concat(this.pixelSize * 2, \"px 0 0,\\n                     0 \").concat(this.pixelSize, \"px 0 0,\\n                     \").concat(this.pixelSize, \"px 0 0 0,\\n                     \").concat(this.pixelSize * -1, \"px 0 0 0,\\n                     0 \").concat(this.pixelSize * -1, \"px 0 0;\\n      }\\n\\n      100% {\\n        transform: rotate(360deg);\\n      }\");\n    }\n  }\n};",{"version":3,"sources":["PixelSpinner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"pixel-spinner\" :style=\"spinnerStyle\">\n    <div class=\"pixel-spinner-inner\" :style=\"spinnerInnerStyle\"></div>\n  </div>\n</template>\n\n<script>\n  import utils from '../../services/utils'\n\n  export default {\n    name: 'PixelSpinner',\n\n    props: {\n      animationDuration: {\n        type: Number,\n        default: 1500\n      },\n      size: {\n        type: Number,\n        default: 70\n      },\n      color: {\n        type: String,\n        default: '#fff'\n      }\n    },\n\n    data () {\n      return {\n        animationBaseName: 'pixel-spinner-animation',\n        currentAnimationName: ''\n      }\n    },\n\n    computed: {\n      pixelSize () {\n        return this.size / 7\n      },\n\n      spinnerStyle () {\n        return {\n          width: `${this.size}px`,\n          height: `${this.size}px`\n        }\n      },\n\n      spinnerInnerStyle () {\n        return {\n          animationDuration: `${this.animationDuration}ms`,\n          animationName: this.currentAnimationName,\n          width: `${this.pixelSize}px`,\n          height: `${this.pixelSize}px`,\n          backgroundColor: this.color,\n          color: this.color,\n          boxShadow: `\n                        ${this.pixelSize * 1.5}px ${this.pixelSize * 1.5}px 0 0,\n                        ${this.pixelSize * -1.5}px ${this.pixelSize * -1.5}px 0 0,\n                        ${this.pixelSize * 1.5}px ${this.pixelSize * -1.5}px 0 0,\n                        ${this.pixelSize * -1.5}px ${this.pixelSize * 1.5}px 0 0,\n                        0 ${this.pixelSize * 1.5}px 0 0,\n                        ${this.pixelSize * 1.5}px 0 0 0,\n                        ${this.pixelSize * -1.5}px 0 0 0,\n                        0 ${this.pixelSize * -1.5}px 0 0\n                      `\n        }\n      }\n    },\n\n    watch: {\n      '$props': {\n        handler () {\n          this.updateAnimation()\n        },\n        deep: true\n      }\n    },\n\n    mounted () {\n      this.updateAnimation()\n    },\n\n    methods: {\n      updateAnimation () {\n        this.updateAnimationName()\n        utils.appendKeyframes(this.currentAnimationName, this.generateKeyframes())\n      },\n\n      updateAnimationName () {\n        this.currentAnimationName = `${this.animationBaseName}-${Date.now()}`\n      },\n\n      generateKeyframes () {\n        return `\n        50% {\n          box-shadow:  ${this.pixelSize * 2}px ${this.pixelSize * 2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * 2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * 2}px 0 0,\n                       0 ${this.pixelSize}px 0 0,\n                       ${this.pixelSize}px 0 0 0,\n                       ${this.pixelSize * -1}px 0 0 0,\n                       0 ${this.pixelSize * -1}px 0 0;\n        }\n\n\n        75% {\n          box-shadow:  ${this.pixelSize * 2}px ${this.pixelSize * 2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * 2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * 2}px 0 0,\n                       0 ${this.pixelSize}px 0 0,\n                       ${this.pixelSize}px 0 0 0,\n                       ${this.pixelSize * -1}px 0 0 0,\n                       0 ${this.pixelSize * -1}px 0 0;\n        }\n\n        100% {\n          transform: rotate(360deg);\n        }`\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .pixel-spinner, .pixel-spinner * {\n    box-sizing: border-box;\n  }\n\n  .pixel-spinner {\n    height: 70px;\n    width: 70px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .pixel-spinner .pixel-spinner-inner {\n    width: calc(70px / 7);\n    height: calc(70px / 7);\n    background-color: #ff1d5e;\n    color: #ff1d5e;\n    box-shadow: 15px 15px  0 0,\n    -15px -15px  0 0,\n    15px -15px  0 0,\n    -15px 15px  0 0,\n    0 15px  0 0,\n    15px 0  0 0,\n    -15px 0  0 0,\n    0 -15px 0 0;\n    animation: pixel-spinner-animation 2000ms linear infinite;\n  }\n\n  @keyframes pixel-spinner-animation {\n    50% {\n      box-shadow: 20px 20px 0px 0px,\n      -20px -20px 0px 0px,\n      20px -20px 0px 0px,\n      -20px 20px 0px 0px,\n      0px 10px 0px 0px,\n      10px 0px 0px 0px,\n      -10px 0px 0px 0px,\n      0px -10px 0px 0px;\n    }\n    75% {\n      box-shadow: 20px 20px 0px 0px,\n      -20px -20px 0px 0px,\n      20px -20px 0px 0px,\n      -20px 20px 0px 0px,\n      0px 10px 0px 0px,\n      10px 0px 0px 0px,\n      -10px 0px 0px 0px,\n      0px -10px 0px 0px;\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/epic-spinners/src/components/lib"}]}