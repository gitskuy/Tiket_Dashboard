{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-popup/quasar/mixins/model-toggle.js","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-popup/quasar/mixins/model-toggle.js","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint prefer-promise-reject-errors: 0 */\nimport History from '../history';\nexport default {\n  props: {\n    value: Boolean\n  },\n  data: function data() {\n    return {\n      showing: false\n    };\n  },\n  watch: {\n    value: function value(val) {\n      var _this = this;\n\n      if (this.disable && val) {\n        this.$emit('input', false);\n        return;\n      }\n\n      this.$nextTick(function () {\n        if (_this.value !== _this.showing) {\n          _this[val ? 'show' : 'hide']();\n        }\n      });\n    }\n  },\n  methods: {\n    toggle: function toggle(evt) {\n      return this[this.showing ? 'hide' : 'show'](evt);\n    },\n    show: function show(evt) {\n      var _this2 = this;\n\n      if (this.disable || this.showing) {\n        return this.showPromise || Promise.resolve(evt);\n      }\n\n      this.hidePromise && this.hidePromiseReject();\n      this.showing = true;\n\n      if (this.value === false) {\n        this.$emit('input', true);\n      }\n\n      if (this.$options.modelToggle === void 0 || this.$options.modelToggle.history) {\n        this.__historyEntry = {\n          handler: this.hide\n        };\n        History.add(this.__historyEntry);\n      }\n\n      if (!this.__show) {\n        this.$emit('show', evt);\n        return Promise.resolve(evt);\n      }\n\n      this.showPromise = new Promise(function (resolve, reject) {\n        _this2.showPromiseResolve = function () {\n          _this2.showPromise = null;\n\n          _this2.$emit('show', evt);\n\n          resolve(evt);\n        };\n\n        _this2.showPromiseReject = function () {\n          _this2.showPromise.catch(function () {});\n\n          _this2.showPromise = null;\n          reject(null); // eslint prefer-promise-reject-errors: 0\n        };\n      });\n\n      this.__show(evt);\n\n      return this.showPromise || Promise.resolve(evt);\n    },\n    hide: function hide(evt) {\n      var _this3 = this;\n\n      if (this.disable || !this.showing) {\n        return this.hidePromise || Promise.resolve(evt);\n      }\n\n      this.showPromise && this.showPromiseReject();\n      this.showing = false;\n\n      if (this.value === true) {\n        this.$emit('input', false);\n      }\n\n      this.__removeHistory();\n\n      if (!this.__hide) {\n        this.$emit('hide', evt);\n        return Promise.resolve();\n      }\n\n      this.hidePromise = new Promise(function (resolve, reject) {\n        _this3.hidePromiseResolve = function () {\n          _this3.hidePromise = null;\n\n          _this3.$emit('hide', evt);\n\n          resolve();\n        };\n\n        _this3.hidePromiseReject = function () {\n          _this3.hidePromise.catch(function () {});\n\n          _this3.hidePromise = null;\n          reject(null);\n        };\n      });\n\n      this.__hide(evt);\n\n      return this.hidePromise || Promise.resolve(evt);\n    },\n    __removeHistory: function __removeHistory() {\n      if (this.__historyEntry) {\n        History.remove(this.__historyEntry);\n        this.__historyEntry = null;\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.showing) {\n      this.showPromise && this.showPromiseReject();\n      this.hidePromise && this.hidePromiseReject();\n\n      this.__removeHistory();\n    }\n  }\n};",{"version":3,"sources":["/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-components/vuestic-popup/quasar/mixins/model-toggle.js"],"names":["History","props","value","Boolean","data","showing","watch","val","disable","$emit","$nextTick","methods","toggle","evt","show","showPromise","Promise","resolve","hidePromise","hidePromiseReject","$options","modelToggle","history","__historyEntry","handler","hide","add","__show","reject","showPromiseResolve","showPromiseReject","catch","__removeHistory","__hide","hidePromiseResolve","remove","beforeDestroy"],"mappings":"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","sourcesContent":["/* eslint prefer-promise-reject-errors: 0 */\nimport History from '../history'\n\nexport default {\n  props: {\n    value: Boolean,\n  },\n  data () {\n    return {\n      showing: false,\n    }\n  },\n  watch: {\n    value (val) {\n      if (this.disable && val) {\n        this.$emit('input', false)\n        return\n      }\n\n      this.$nextTick(() => {\n        if (this.value !== this.showing) {\n          this[val ? 'show' : 'hide']()\n        }\n      })\n    },\n  },\n  methods: {\n    toggle (evt) {\n      return this[this.showing ? 'hide' : 'show'](evt)\n    },\n    show (evt) {\n      if (this.disable || this.showing) {\n        return this.showPromise || Promise.resolve(evt)\n      }\n\n      this.hidePromise && this.hidePromiseReject()\n\n      this.showing = true\n      if (this.value === false) {\n        this.$emit('input', true)\n      }\n\n      if (this.$options.modelToggle === void 0 || this.$options.modelToggle.history) {\n        this.__historyEntry = {\n          handler: this.hide,\n        }\n        History.add(this.__historyEntry)\n      }\n\n      if (!this.__show) {\n        this.$emit('show', evt)\n        return Promise.resolve(evt)\n      }\n\n      this.showPromise = new Promise((resolve, reject) => {\n        this.showPromiseResolve = () => {\n          this.showPromise = null\n          this.$emit('show', evt)\n          resolve(evt)\n        }\n        this.showPromiseReject = () => {\n          this.showPromise.catch(() => {\n          })\n          this.showPromise = null\n          reject(null) // eslint prefer-promise-reject-errors: 0\n        }\n      })\n\n      this.__show(evt)\n      return this.showPromise || Promise.resolve(evt)\n    },\n    hide (evt) {\n      if (this.disable || !this.showing) {\n        return this.hidePromise || Promise.resolve(evt)\n      }\n\n      this.showPromise && this.showPromiseReject()\n\n      this.showing = false\n      if (this.value === true) {\n        this.$emit('input', false)\n      }\n\n      this.__removeHistory()\n\n      if (!this.__hide) {\n        this.$emit('hide', evt)\n        return Promise.resolve()\n      }\n\n      this.hidePromise = new Promise((resolve, reject) => {\n        this.hidePromiseResolve = () => {\n          this.hidePromise = null\n          this.$emit('hide', evt)\n          resolve()\n        }\n        this.hidePromiseReject = () => {\n          this.hidePromise.catch(() => {\n          })\n          this.hidePromise = null\n          reject(null)\n        }\n      })\n\n      this.__hide(evt)\n      return this.hidePromise || Promise.resolve(evt)\n    },\n\n    __removeHistory () {\n      if (this.__historyEntry) {\n        History.remove(this.__historyEntry)\n        this.__historyEntry = null\n      }\n    },\n  },\n  beforeDestroy () {\n    if (this.showing) {\n      this.showPromise && this.showPromiseReject()\n      this.hidePromise && this.hidePromiseReject()\n      this.__removeHistory()\n    }\n  },\n}\n"]}]}