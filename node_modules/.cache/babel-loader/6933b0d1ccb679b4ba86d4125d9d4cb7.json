{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/thread-loader/dist/cjs.js!/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-file-upload/VuesticFileUpload.vue","mtime":1563286052649},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/home/ahmad/tiket/experiments/myproject/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuesticFileUploadList from './VuesticFileUploadList';\nimport VuesticFileUploadContainer from './VuesticFileUploadContainer';\nexport default {\n  name: 'vuestic-file-upload',\n  components: {\n    VuesticFileUploadList: VuesticFileUploadList,\n    VuesticFileUploadContainer: VuesticFileUploadContainer\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'list',\n      validator: function validator(value) {\n        return ['list', 'gallery', 'single'].indexOf(value) !== -1;\n      }\n    },\n    fileTypes: {\n      type: String,\n      default: ''\n    },\n    dropzone: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  methods: {\n    uploadFile: function uploadFile(e) {\n      var files = e.target.files || e.dataTransfer.files; // type validation\n\n      if (this.fileTypes) {\n        files = this.validateFileTypes(files);\n      }\n\n      this.files = _toConsumableArray(this.files).concat(_toConsumableArray(files));\n    },\n    removeFile: function removeFile(index) {\n      this.files.splice(index, 1);\n    },\n    removeSingleFile: function removeSingleFile() {\n      this.files = [];\n    },\n    validateFileTypes: function validateFileTypes(files) {\n      var _this = this;\n\n      return _toConsumableArray(files).filter(function (file) {\n        var fileName = file.name;\n        var extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase();\n\n        if (_this.fileTypes.indexOf(extn) === -1) {\n          _this.$refs.mediumModal.open();\n        }\n\n        return _this.fileTypes.indexOf(extn) !== -1;\n      });\n    }\n  },\n  computed: {\n    files: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(files) {\n        this.$emit('input', files);\n      }\n    }\n  }\n};",{"version":3,"sources":["VuesticFileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,qBAAA,MAAA,yBAAA;AACA,OAAA,0BAAA,MAAA,8BAAA;AAEA,eAAA;AACA,QAAA,qBADA;AAEA,cAAA;AACA,2BAAA,qBADA;AAEA,gCAAA;AAFA,GAFA;AAMA,SAAA;AACA,UAAA;AACA,YAAA,MADA;AAEA,eAAA,MAFA;AAGA,iBAAA,mBAAA,KAAA,EAAA;AACA,eAAA,CAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CAAA;AACA;AALA,KADA;AAQA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KARA;AAYA,cAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAZA;AAgBA,WAAA;AACA,eAAA;AAAA,eAAA,EAAA;AAAA;AADA;AAhBA,GANA;AA0BA,WAAA;AACA,cADA,sBACA,CADA,EACA;AACA,UAAA,QAAA,EAAA,MAAA,CAAA,KAAA,IAAA,EAAA,YAAA,CAAA,KAAA,CADA,CAGA;;AACA,UAAA,KAAA,SAAA,EAAA;AACA,gBAAA,KAAA,iBAAA,CAAA,KAAA,CAAA;AACA;;AACA,WAAA,KAAA,sBAAA,KAAA,KAAA,4BAAA,KAAA;AACA,KATA;AAUA,cAVA,sBAUA,KAVA,EAUA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAZA;AAaA,oBAbA,8BAaA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,KAfA;AAgBA,qBAhBA,6BAgBA,KAhBA,EAgBA;AAAA;;AACA,aAAA,mBAAA,KAAA,EAAA,MAAA,CAAA,gBAAA;AACA,YAAA,WAAA,KAAA,IAAA;AACA,YAAA,OAAA,SAAA,SAAA,CAAA,SAAA,WAAA,CAAA,GAAA,IAAA,CAAA,EACA,WADA,EAAA;;AAEA,YAAA,MAAA,SAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,gBAAA,KAAA,CAAA,WAAA,CAAA,IAAA;AACA;;AACA,eAAA,MAAA,SAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA,CAAA;AACA,OARA,CAAA;AASA;AA1BA,GA1BA;AAsDA,YAAA;AACA,WAAA;AACA,SADA,iBACA;AACA,eAAA,KAAA,KAAA;AACA,OAHA;AAIA,SAJA,eAIA,KAJA,EAIA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AANA;AADA;AAtDA,CAAA","sourcesContent":["<template>\n  <div class=\"vuestic-file-upload\"\n       :class=\"{'vuestic-file-upload--dropzone': dropzone}\">\n    <vuestic-file-upload-container\n      :type=\"type\"\n      :fileTypes=\"fileTypes\"\n      :dropzone=\"dropzone\"\n      @upload=\"uploadFile\"\n    >\n      <vuestic-file-upload-list\n        v-if=\"files.length\"\n        :type=\"type\"\n        :files=\"files\"\n        @remove=\"removeFile\"\n        @remove-single=\"removeSingleFile\"\n      />\n      <vuestic-modal ref=\"mediumModal\" :no-buttons=\"true\">\n        <div slot=\"title\">{{ $t('fileUpload.modalTitle') }}</div>\n        <div>\n          {{ $t('fileUpload.modalText') }}\n        </div>\n      </vuestic-modal>\n    </vuestic-file-upload-container>\n  </div>\n</template>\n\n<script>\nimport VuesticFileUploadList from './VuesticFileUploadList'\nimport VuesticFileUploadContainer from './VuesticFileUploadContainer'\n\nexport default {\n  name: 'vuestic-file-upload',\n  components: {\n    VuesticFileUploadList: VuesticFileUploadList,\n    VuesticFileUploadContainer: VuesticFileUploadContainer,\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'list',\n      validator: function (value) {\n        return ['list', 'gallery', 'single'].indexOf(value) !== -1\n      },\n    },\n    fileTypes: {\n      type: String,\n      default: '',\n    },\n    dropzone: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      default: () => [],\n    },\n  },\n  methods: {\n    uploadFile (e) {\n      let files = e.target.files || e.dataTransfer.files\n\n      // type validation\n      if (this.fileTypes) {\n        files = this.validateFileTypes(files)\n      }\n      this.files = [...this.files, ...files]\n    },\n    removeFile (index) {\n      this.files.splice(index, 1)\n    },\n    removeSingleFile () {\n      this.files = []\n    },\n    validateFileTypes (files) {\n      return [...files].filter(file => {\n        const fileName = file.name\n        const extn = fileName.substring(fileName.lastIndexOf('.') + 1)\n          .toLowerCase()\n        if (this.fileTypes.indexOf(extn) === -1) {\n          this.$refs.mediumModal.open()\n        }\n        return this.fileTypes.indexOf(extn) !== -1\n      })\n    },\n  },\n  computed: {\n    files: {\n      get () {\n        return this.value\n      },\n      set (files) {\n        this.$emit('input', files)\n      },\n    },\n  },\n}\n</script>\n\n<style lang='scss'>\n.vuestic-file-upload {\n  &--dropzone {\n    background-color: $lighter-green;\n    padding: 0 2rem;\n    overflow: hidden;\n  }\n}\n\n// Maybe we should create new component for text button\n.btn-text {\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n\n  & + & {\n    margin-left: 1.5rem;\n  }\n\n  &--primary {\n    color: $vue-green;\n\n    &:hover {\n      opacity: 0.6;\n    }\n  }\n\n  &--secondary {\n    color: $white;\n  }\n}\n\n@media (max-width: 576px) {\n  .vuestic-file-upload {\n    &--dropzone {\n      padding: 0 1rem;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-file-upload"}]}