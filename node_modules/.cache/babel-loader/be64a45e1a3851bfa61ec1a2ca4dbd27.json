{"remainingRequest":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-directives/Dropdown.js","dependencies":[{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-directives/Dropdown.js","mtime":1563286052661},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  bind: function bind(el, binding) {\n    // HACK Probably could be done much better.\n    // Gonna explain what's going on here.\n    // ** Declaring stuffs. **\n    // We find child with .dropdown-toggle class. It's supposed to open dropdown on click.\n    var dropdownToggle = el.querySelector('.dropdown-toggle'); // We also find an input.\n\n    var dropdownToggleInput = el.querySelector('.dropdown-toggle input'); // And other stuff.\n\n    var dropdownMenu = el.querySelector('.dropdown-menu');\n    var dropdownMenuContent = el.querySelector('.dropdown-menu-content'); // HACK We find a toggle icon by icon class... Which is weird.\n\n    var dropdownIon = el.querySelector('.ion'); // These are directive modifiers. Which we can exploit to modify dropdown behaviour.\n\n    var closeOnMenuClick = binding.modifiers.closeOnMenuClick;\n    var value = binding.value || {};\n    var isBlocked = value.isBlocked || false;\n\n    var onDropdownClose = value.onDropdownClose || function () {}; // ** Checking if declarations are sane. **\n\n\n    if (!dropdownToggle) {\n      throw new Error('Dropdown should have an element with .dropdown-toggle class.');\n    } // ** Adding listeners **\n\n\n    dropdownToggle.addEventListener('click', function (event) {\n      event.preventDefault();\n      var isShown = el.classList.contains('show');\n      setTimeout(function () {\n        if (isBlocked && isShown) {\n          return;\n        } // That probably means that component in question is select.\n\n\n        if (isBlocked) {\n          // HACK '.ion-ios-arrow-down' class stays,\n          // but is overrided by 'ion-ios-arrow-up'\n          // so it works as if we swap the classes.\n          dropdownIon.classList.add('ion-ios-arrow-up');\n        }\n\n        el.classList.toggle('show', !isShown);\n        dropdownMenu.classList.toggle('show', !isShown);\n      });\n    });\n\n    var removeShow = function removeShow(event) {\n      if (event.target === dropdownToggleInput) {\n        return;\n      } // Notifying parent that dropdown is closing.\n\n\n      onDropdownClose(); // Again, probably means we're dealing with select here.\n\n      if (dropdownIon) {\n        if (dropdownIon.classList.contains('ion-ios-arrow-up')) {\n          dropdownIon.classList.remove('ion-ios-arrow-up');\n        }\n      }\n\n      el.classList.remove('show');\n      dropdownMenu.classList.remove('show');\n    };\n\n    window.addEventListener('click', removeShow); // We attach function to el to be able to remove event listeners from window on unbind.\n\n    el.removeShow = removeShow;\n    window.addEventListener('click', el.removeShow); // Probably also checking if element is select.\n\n    if (dropdownMenu) {\n      dropdownMenu.addEventListener('click', function (event) {\n        if (!closeOnMenuClick) {\n          event.stopPropagation();\n        }\n      });\n    } // HACK Not sure why, but some dropdowns have dropdown-menu-context, when some do not...\n    // And if we have one - it should close on click seemingly.\n\n\n    if (dropdownMenuContent) {\n      dropdownMenuContent.addEventListener('click', function () {\n        onDropdownClose();\n\n        if (dropdownIon) {\n          if (dropdownIon.classList.contains('ion-ios-arrow-up')) {\n            dropdownIon.classList.remove('ion-ios-arrow-up');\n          }\n        }\n\n        dropdownMenu.classList.remove('show');\n        el.classList.remove('show');\n      });\n    }\n  },\n  unbind: function unbind(el) {\n    window.removeEventListener('click', el.removeShow);\n  }\n};",{"version":3,"sources":["/home/ahmad/tiket/experiments/tiketfinalpush/Tiket_Dashboard/src/vuestic-theme/vuestic-directives/Dropdown.js"],"names":["bind","el","binding","dropdownToggle","querySelector","dropdownToggleInput","dropdownMenu","dropdownMenuContent","dropdownIon","closeOnMenuClick","modifiers","value","isBlocked","onDropdownClose","Error","addEventListener","event","preventDefault","isShown","classList","contains","setTimeout","add","toggle","removeShow","target","remove","window","stopPropagation","unbind","removeEventListener"],"mappings":"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","sourcesContent":["export default {\n\n  bind: function (el, binding) {\n    // HACK Probably could be done much better.\n    // Gonna explain what's going on here.\n\n    // ** Declaring stuffs. **\n\n    // We find child with .dropdown-toggle class. It's supposed to open dropdown on click.\n    const dropdownToggle = el.querySelector('.dropdown-toggle')\n    // We also find an input.\n    const dropdownToggleInput = el.querySelector('.dropdown-toggle input')\n    // And other stuff.\n    const dropdownMenu = el.querySelector('.dropdown-menu')\n    const dropdownMenuContent = el.querySelector('.dropdown-menu-content')\n\n    // HACK We find a toggle icon by icon class... Which is weird.\n    const dropdownIon = el.querySelector('.ion')\n\n    // These are directive modifiers. Which we can exploit to modify dropdown behaviour.\n    const closeOnMenuClick = binding.modifiers.closeOnMenuClick\n\n    const value = binding.value || {}\n    const isBlocked = value.isBlocked || false\n\n    const onDropdownClose = value.onDropdownClose || (() => {\n    })\n\n    // ** Checking if declarations are sane. **\n\n    if (!dropdownToggle) {\n      throw new Error('Dropdown should have an element with .dropdown-toggle class.')\n    }\n\n    // ** Adding listeners **\n\n    dropdownToggle.addEventListener('click', (event) => {\n      event.preventDefault()\n      const isShown = el.classList.contains('show')\n      setTimeout(() => {\n        if (isBlocked && isShown) {\n          return\n        }\n\n        // That probably means that component in question is select.\n        if (isBlocked) {\n          // HACK '.ion-ios-arrow-down' class stays,\n          // but is overrided by 'ion-ios-arrow-up'\n          // so it works as if we swap the classes.\n          dropdownIon.classList.add('ion-ios-arrow-up')\n        }\n\n        el.classList.toggle('show', !isShown)\n        dropdownMenu.classList.toggle('show', !isShown)\n      })\n    })\n\n    const removeShow = (event) => {\n      if (event.target === dropdownToggleInput) {\n        return\n      }\n\n      // Notifying parent that dropdown is closing.\n      onDropdownClose()\n\n      // Again, probably means we're dealing with select here.\n      if (dropdownIon) {\n        if (dropdownIon.classList.contains('ion-ios-arrow-up')) {\n          dropdownIon.classList.remove('ion-ios-arrow-up')\n        }\n      }\n      el.classList.remove('show')\n      dropdownMenu.classList.remove('show')\n    }\n    window.addEventListener('click', removeShow)\n    // We attach function to el to be able to remove event listeners from window on unbind.\n    el.removeShow = removeShow\n\n    window.addEventListener('click', el.removeShow)\n    // Probably also checking if element is select.\n    if (dropdownMenu) {\n      dropdownMenu.addEventListener('click', (event) => {\n        if (!closeOnMenuClick) {\n          event.stopPropagation()\n        }\n      })\n    }\n\n    // HACK Not sure why, but some dropdowns have dropdown-menu-context, when some do not...\n    // And if we have one - it should close on click seemingly.\n    if (dropdownMenuContent) {\n      dropdownMenuContent.addEventListener('click', () => {\n        onDropdownClose()\n        if (dropdownIon) {\n          if (dropdownIon.classList.contains('ion-ios-arrow-up')) {\n            dropdownIon.classList.remove('ion-ios-arrow-up')\n          }\n        }\n        dropdownMenu.classList.remove('show')\n        el.classList.remove('show')\n      })\n    }\n  },\n  unbind: (el) => {\n    window.removeEventListener('click', el.removeShow)\n  },\n}\n"]}]}