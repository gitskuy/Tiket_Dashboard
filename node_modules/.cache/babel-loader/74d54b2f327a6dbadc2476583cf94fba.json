{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-simple-select/VuesticSimpleSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-simple-select/VuesticSimpleSelect.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Dropdown from 'vuestic-directives/Dropdown';\nimport Scrollbar from '../vuestic-scrollbar/VuesticScrollbar.vue';\nexport default {\n  name: 'vuestic-simple-select',\n  components: {\n    Scrollbar: Scrollbar\n  },\n  directives: {\n    dropdown: Dropdown\n  },\n  props: {\n    label: String,\n    options: Array,\n    value: {\n      default: '',\n      required: true\n    },\n    optionKey: String,\n    required: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    name: {\n      type: String,\n      default: 'simple-select'\n    }\n  },\n  data: function data() {\n    return {\n      validated: false,\n      displayValue: this.value || '',\n      selectedValue: this.value\n    };\n  },\n  watch: {\n    value: {\n      handler: function handler(value) {\n        if (!value || !this.optionKey) {\n          this.displayValue = value || '';\n          this.selectedValue = value || '';\n          return;\n        }\n\n        this.selectedValue = value[this.optionKey];\n        this.displayValue = value[this.optionKey];\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    filteredList: function filteredList() {\n      var optionKey = this.optionKey;\n      var displayValue = this.displayValue;\n\n      if (displayValue === '') {\n        return this.options;\n      } else {\n        // HACK This is done poorly.\n        return this.options.filter(function (item) {\n          if (optionKey && item && item[optionKey]) {\n            // option is object\n            if (displayValue) {\n              return item[optionKey].toLowerCase().search(displayValue.toLowerCase()) === 0;\n            }\n          } else {\n            // option is string\n            return (item + '').toLowerCase().search(displayValue.toLowerCase()) === 0;\n          }\n        });\n      }\n    },\n    isClearable: function isClearable() {\n      return this.clearable && this.selectedValue !== '' && this.displayValue !== '' && this.selectedValue !== undefined;\n    },\n    placeholder: function placeholder() {\n      if (this.optionKey && this.selectedValue) {\n        return this.selectedValue[this.optionKey];\n      } else {\n        return this.selectedValue;\n      }\n    }\n  },\n  methods: {\n    onDropdownClose: function onDropdownClose() {\n      if (!this.value) {\n        this.displayValue = '';\n      }\n\n      if (this.value && this.optionKey) {\n        this.displayValue = this.value[this.optionKey];\n      }\n    },\n    toggleSelection: function toggleSelection(option) {\n      this.isOptionSelected(option) ? this.unselectOption() : this.selectOption(option);\n    },\n    unselectOption: function unselectOption() {\n      this.selectedValue = '';\n      this.$emit('input', this.selectedValue);\n    },\n    showDropdown: function showDropdown() {\n      this.displayValue = '';\n    },\n    isOptionSelected: function isOptionSelected(option) {\n      if (this.optionKey) {\n        return this.selectedValue === option[this.optionKey];\n      } else {\n        return this.selectedValue === option;\n      }\n    },\n    selectOption: function selectOption(option) {\n      if (!option) {\n        this.displayValue = '';\n      }\n\n      if (option && this.optionKey) {\n        this.displayValue = option[this.optionKey];\n      }\n\n      this.selectedValue = option;\n      this.$emit('input', option);\n    },\n    validate: function validate() {\n      this.validated = true;\n    },\n    isValid: function isValid() {\n      var isValid = true;\n\n      if (this.required) {\n        isValid = !!this.value;\n      }\n\n      return isValid;\n    },\n    hasErrors: function hasErrors() {\n      var hasErrors = false;\n\n      if (this.required) {\n        hasErrors = this.validated && !this.value;\n      }\n\n      return hasErrors;\n    },\n    showRequiredError: function showRequiredError() {\n      return \"The \".concat(this.name, \" field is required\");\n    }\n  }\n};",{"version":3,"sources":["VuesticSimpleSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,QAAA,MAAA,6BAAA;AACA,OAAA,SAAA,MAAA,2CAAA;AAEA,eAAA;AACA,QAAA,uBADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,cAAA;AACA,cAAA;AADA,GALA;AAQA,SAAA;AACA,WAAA,MADA;AAEA,aAAA,KAFA;AAGA,WAAA;AACA,eAAA,EADA;AAEA,gBAAA;AAFA,KAHA;AAOA,eAAA,MAPA;AAQA,cAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KARA;AAYA,eAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAZA;AAgBA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAhBA,GARA;AA6BA,MA7BA,kBA6BA;AACA,WAAA;AACA,iBAAA,KADA;AAEA,oBAAA,KAAA,KAAA,IAAA,EAFA;AAGA,qBAAA,KAAA;AAHA,KAAA;AAKA,GAnCA;AAoCA,SAAA;AACA,WAAA;AACA,aADA,mBACA,KADA,EACA;AACA,YAAA,CAAA,KAAA,IAAA,CAAA,KAAA,SAAA,EAAA;AACA,eAAA,YAAA,GAAA,SAAA,EAAA;AACA,eAAA,aAAA,GAAA,SAAA,EAAA;AACA;AACA;;AACA,aAAA,aAAA,GAAA,MAAA,KAAA,SAAA,CAAA;AACA,aAAA,YAAA,GAAA,MAAA,KAAA,SAAA,CAAA;AACA,OATA;AAUA,iBAAA;AAVA;AADA,GApCA;AAkDA,YAAA;AACA,gBADA,0BACA;AACA,UAAA,YAAA,KAAA,SAAA;AACA,UAAA,eAAA,KAAA,YAAA;;AACA,UAAA,iBAAA,EAAA,EAAA;AACA,eAAA,KAAA,OAAA;AACA,OAFA,MAEA;AACA;AACA,eAAA,KAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,aAAA,IAAA,IAAA,KAAA,SAAA,CAAA,EAAA;AACA;AACA,gBAAA,YAAA,EAAA;AACA,qBAAA,KAAA,SAAA,EAAA,WAAA,GACA,MADA,CACA,aAAA,WAAA,EADA,MACA,CADA;AAEA;AACA,WANA,MAMA;AACA;AACA,mBAAA,CAAA,OAAA,EAAA,EAAA,WAAA,GACA,MADA,CACA,aAAA,WAAA,EADA,MACA,CADA;AAEA;AACA,SAZA,CAAA;AAaA;AACA,KAtBA;AAuBA,eAvBA,yBAuBA;AACA,aAAA,KAAA,SAAA,IAAA,KAAA,aAAA,KAAA,EAAA,IAAA,KAAA,YAAA,KAAA,EAAA,IAAA,KAAA,aAAA,KAAA,SAAA;AACA,KAzBA;AA0BA,eA1BA,yBA0BA;AACA,UAAA,KAAA,SAAA,IAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,aAAA,CAAA,KAAA,SAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,aAAA;AACA;AACA;AAhCA,GAlDA;AAoFA,WAAA;AACA,mBADA,6BACA;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,YAAA,GAAA,EAAA;AACA;;AACA,UAAA,KAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,aAAA,YAAA,GAAA,KAAA,KAAA,CAAA,KAAA,SAAA,CAAA;AACA;AACA,KARA;AASA,mBATA,2BASA,MATA,EASA;AACA,WAAA,gBAAA,CAAA,MAAA,IAAA,KAAA,cAAA,EAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CAAA;AACA,KAXA;AAYA,kBAZA,4BAYA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,aAAA;AACA,KAfA;AAgBA,gBAhBA,0BAgBA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,KAlBA;AAmBA,oBAnBA,4BAmBA,MAnBA,EAmBA;AACA,UAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA,aAAA,KAAA,OAAA,KAAA,SAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,aAAA,KAAA,MAAA;AACA;AACA,KAzBA;AA0BA,gBA1BA,wBA0BA,MA1BA,EA0BA;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,YAAA,GAAA,EAAA;AACA;;AACA,UAAA,UAAA,KAAA,SAAA,EAAA;AACA,aAAA,YAAA,GAAA,OAAA,KAAA,SAAA,CAAA;AACA;;AACA,WAAA,aAAA,GAAA,MAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,MAAA;AACA,KAnCA;AAoCA,YApCA,sBAoCA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAtCA;AAuCA,WAvCA,qBAuCA;AACA,UAAA,UAAA,IAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,kBAAA,CAAA,CAAA,KAAA,KAAA;AACA;;AACA,aAAA,OAAA;AACA,KA7CA;AA8CA,aA9CA,uBA8CA;AACA,UAAA,YAAA,KAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,oBAAA,KAAA,SAAA,IAAA,CAAA,KAAA,KAAA;AACA;;AACA,aAAA,SAAA;AACA,KApDA;AAqDA,qBArDA,+BAqDA;AACA,2BAAA,KAAA,IAAA;AACA;AAvDA;AApFA,CAAA","sourcesContent":["<template>\n  <div class=\"vuestic-simple-select\">\n    <div\n      class=\"form-group with-icon-right dropdown select-form-group\"\n      v-dropdown=\"{ isBlocked: true, onDropdownClose: onDropdownClose }\"\n      :class=\"{'has-error': hasErrors()}\"\n    >\n      <div\n        class=\"input-group dropdown-toggle vuestic-simple-select__dropdown-toggle\">\n        <div>\n          <input\n            @focus=\"showDropdown()\"\n            :class=\"{'has-value': !!value}\"\n            v-model=\"displayValue\"\n            :name=\"name\"\n            :options=\"options\"\n          >\n          <label class=\"control-label\">{{label}}</label><i class=\"bar\"/>\n          <small v-show=\"hasErrors()\" class=\"help text-danger\">\n            {{ showRequiredError() }}\n          </small>\n        </div>\n        <i\n          class=\"ion ion-ios-arrow-down icon-right input-icon vuestic-simple-select__dropdown-arrow\"\n          @click=\"showDropdown\"\n        />\n      </div>\n      <div v-if=\"isClearable\">\n        <i\n          class=\"fa fa-close icon-cross icon-right input-icon vuestic-simple-select__unselect\"\n          @click=\"unselectOption\"\n        />\n      </div>\n      <div\n        class=\"dropdown-menu vuestic-simple-select__dropdown-menu\"\n        aria-labelledby=\"dropdownMenuButton\">\n        <scrollbar ref=\"scrollbar\">\n          <div\n            class=\"dropdown-menu-content vuestic-simple-select__dropdown-menu-content\">\n            <div\n              class=\"dropdown-item vuestic-simple-select__dropdown-item\"\n              v-for=\"(option, index) in filteredList\"\n              :key=\"index\"\n              :class=\"{'selected': isOptionSelected(option)}\"\n              @click=\"toggleSelection(option)\"\n            >\n            <span\n              class=\"ellipsis\">{{optionKey ? option[optionKey] : option}}</span>\n            </div>\n          </div>\n        </scrollbar>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropdown from 'vuestic-directives/Dropdown'\nimport Scrollbar from '../vuestic-scrollbar/VuesticScrollbar.vue'\n\nexport default {\n  name: 'vuestic-simple-select',\n  components: {\n    Scrollbar,\n  },\n  directives: {\n    dropdown: Dropdown,\n  },\n  props: {\n    label: String,\n    options: Array,\n    value: {\n      default: '',\n      required: true,\n    },\n    optionKey: String,\n    required: {\n      type: Boolean,\n      default: false,\n    },\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    name: {\n      type: String,\n      default: 'simple-select',\n    },\n  },\n  data () {\n    return {\n      validated: false,\n      displayValue: this.value || '',\n      selectedValue: this.value,\n    }\n  },\n  watch: {\n    value: {\n      handler (value) {\n        if (!value || !this.optionKey) {\n          this.displayValue = value || ''\n          this.selectedValue = value || ''\n          return\n        }\n        this.selectedValue = value[this.optionKey]\n        this.displayValue = value[this.optionKey]\n      },\n      immediate: true,\n    },\n  },\n  computed: {\n    filteredList () {\n      const optionKey = this.optionKey\n      const displayValue = this.displayValue\n      if (displayValue === '') {\n        return this.options\n      } else {\n        // HACK This is done poorly.\n        return this.options.filter(function (item) {\n          if (optionKey && item && item[optionKey]) {\n            // option is object\n            if (displayValue) {\n              return item[optionKey].toLowerCase()\n                .search(displayValue.toLowerCase()) === 0\n            }\n          } else {\n            // option is string\n            return (item + '').toLowerCase()\n              .search(displayValue.toLowerCase()) === 0\n          }\n        })\n      }\n    },\n    isClearable () {\n      return (this.clearable && this.selectedValue !== '' && this.displayValue !== '' && this.selectedValue !== undefined)\n    },\n    placeholder () {\n      if (this.optionKey && this.selectedValue) {\n        return this.selectedValue[this.optionKey]\n      } else {\n        return this.selectedValue\n      }\n    },\n  },\n  methods: {\n    onDropdownClose () {\n      if (!this.value) {\n        this.displayValue = ''\n      }\n      if (this.value && this.optionKey) {\n        this.displayValue = this.value[this.optionKey]\n      }\n    },\n    toggleSelection (option) {\n      this.isOptionSelected(option) ? this.unselectOption() : this.selectOption(option)\n    },\n    unselectOption () {\n      this.selectedValue = ''\n      this.$emit('input', this.selectedValue)\n    },\n    showDropdown () {\n      this.displayValue = ''\n    },\n    isOptionSelected (option) {\n      if (this.optionKey) {\n        return this.selectedValue === option[this.optionKey]\n      } else {\n        return this.selectedValue === option\n      }\n    },\n    selectOption (option) {\n      if (!option) {\n        this.displayValue = ''\n      }\n      if (option && this.optionKey) {\n        this.displayValue = option[this.optionKey]\n      }\n      this.selectedValue = option\n      this.$emit('input', option)\n    },\n    validate () {\n      this.validated = true\n    },\n    isValid () {\n      let isValid = true\n      if (this.required) {\n        isValid = !!this.value\n      }\n      return isValid\n    },\n    hasErrors () {\n      let hasErrors = false\n      if (this.required) {\n        hasErrors = this.validated && !this.value\n      }\n      return hasErrors\n    },\n    showRequiredError () {\n      return `The ${this.name} field is required`\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vuestic-simple-select {\n\n  &__unselect {\n    margin-right: 20px;\n    cursor: pointer;\n  }\n\n  .vuestic-simple-select__dropdown-arrow.vuestic-simple-select__dropdown-arrow {\n    top: 12px;\n    cursor: pointer;\n  }\n\n  &__dropdown-menu {\n    padding: 0;\n\n    .vuestic-scrollbar {\n      max-height: $dropdown-item-height * 4;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-simple-select"}]}