{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/node_modules/epic-spinners/src/components/lib/SpringSpinner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/epic-spinners/src/components/lib/SpringSpinner.vue","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport utils from '../../services/utils';\nexport default {\n  name: 'SpringSpinner',\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 3000\n    },\n    size: {\n      type: Number,\n      default: 70\n    },\n    color: {\n      type: String,\n      default: '#fff'\n    }\n  },\n  data: function data() {\n    return {\n      animationBaseName: 'spring-spinner-animation',\n      currentAnimationName: ''\n    };\n  },\n  computed: {\n    spinnerStyle: function spinnerStyle() {\n      return {\n        height: \"\".concat(this.size, \"px\"),\n        width: \"\".concat(this.size, \"px\")\n      };\n    },\n    spinnerPartStyle: function spinnerPartStyle() {\n      return {\n        height: \"\".concat(this.size / 2, \"px\"),\n        width: \"\".concat(this.size, \"px\")\n      };\n    },\n    rotatorStyle: function rotatorStyle() {\n      return {\n        height: \"\".concat(this.size, \"px\"),\n        width: \"\".concat(this.size, \"px\"),\n        borderRightColor: this.color,\n        borderTopColor: this.color,\n        borderWidth: \"\".concat(this.size / 7, \"px\"),\n        animationDuration: \"\".concat(this.animationDuration, \"ms\"),\n        animationName: this.currentAnimationName\n      };\n    }\n  },\n  watch: {\n    '$props': {\n      handler: function handler() {\n        this.updateAnimation();\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.updateAnimation();\n  },\n  methods: {\n    updateAnimation: function updateAnimation() {\n      this.updateAnimationName();\n      utils.appendKeyframes(this.currentAnimationName, this.generateKeyframes());\n    },\n    updateAnimationName: function updateAnimationName() {\n      this.currentAnimationName = \"\".concat(this.animationBaseName, \"-\").concat(Date.now());\n    },\n    generateKeyframes: function generateKeyframes() {\n      return \"\\n        0% {\\n          border-width: \".concat(this.size / 7, \"px;\\n        }\\n        25% {\\n          border-width: \").concat(this.size / 23.33, \"px;\\n        }\\n        50% {\\n          transform: rotate(115deg);\\n          border-width: \").concat(this.size / 7, \"px;\\n        }\\n        75% {\\n          border-width: \").concat(this.size / 23.33, \"px;\\n         }\\n        100% {\\n         border-width: \").concat(this.size / 7, \"px;\\n        }\");\n    }\n  }\n};",{"version":3,"sources":["SpringSpinner.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA,OAAA,KAAA,MAAA,sBAAA;AAEA,eAAA;AACA,QAAA,eADA;AAGA,SAAA;AACA,uBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;AAKA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KALA;AASA,WAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AATA,GAHA;AAkBA,MAlBA,kBAkBA;AACA,WAAA;AACA,yBAAA,0BADA;AAEA,4BAAA;AAFA,KAAA;AAIA,GAvBA;AAyBA,YAAA;AACA,gBADA,0BACA;AACA,aAAA;AACA,0BAAA,KAAA,IAAA,OADA;AAEA,yBAAA,KAAA,IAAA;AAFA,OAAA;AAIA,KANA;AAQA,oBARA,8BAQA;AACA,aAAA;AACA,0BAAA,KAAA,IAAA,GAAA,CAAA,OADA;AAEA,yBAAA,KAAA,IAAA;AAFA,OAAA;AAIA,KAbA;AAeA,gBAfA,0BAeA;AACA,aAAA;AACA,0BAAA,KAAA,IAAA,OADA;AAEA,yBAAA,KAAA,IAAA,OAFA;AAGA,0BAAA,KAAA,KAHA;AAIA,wBAAA,KAAA,KAJA;AAKA,+BAAA,KAAA,IAAA,GAAA,CAAA,OALA;AAMA,qCAAA,KAAA,iBAAA,OANA;AAOA,uBAAA,KAAA;AAPA,OAAA;AASA;AAzBA,GAzBA;AAqDA,SAAA;AACA,cAAA;AACA,aADA,qBACA;AACA,aAAA,eAAA;AACA,OAHA;AAIA,YAAA;AAJA;AADA,GArDA;AA8DA,SA9DA,qBA8DA;AACA,SAAA,eAAA;AACA,GAhEA;AAkEA,WAAA;AACA,mBADA,6BACA;AACA,WAAA,mBAAA;AACA,YAAA,eAAA,CAAA,KAAA,oBAAA,EAAA,KAAA,iBAAA,EAAA;AACA,KAJA;AAMA,uBANA,iCAMA;AACA,WAAA,oBAAA,aAAA,KAAA,iBAAA,cAAA,KAAA,GAAA,EAAA;AACA,KARA;AAUA,qBAVA,+BAUA;AACA,+DAEA,KAAA,IAAA,GAAA,CAFA,oEAKA,KAAA,IAAA,GAAA,KALA,0GASA,KAAA,IAAA,GAAA,CATA,oEAYA,KAAA,IAAA,GAAA,KAZA,qEAeA,KAAA,IAAA,GAAA,CAfA;AAiBA;AA5BA;AAlEA,CAAA","sourcesContent":["<template>\n  <div class=\"spring-spinner\" :style=\"spinnerStyle\">\n    <div class=\"spring-spinner-part top\" :style=\"spinnerPartStyle\">\n      <div class=\"spring-spinner-rotator\" :style=\"rotatorStyle\"></div>\n    </div>\n    <div class=\"spring-spinner-part bottom\" :style=\"spinnerPartStyle\">\n      <div class=\"spring-spinner-rotator\" :style=\"rotatorStyle\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import utils from '../../services/utils'\n\n  export default {\n    name: 'SpringSpinner',\n\n    props: {\n      animationDuration: {\n        type: Number,\n        default: 3000\n      },\n      size: {\n        type: Number,\n        default: 70\n      },\n      color: {\n        type: String,\n        default: '#fff'\n      }\n    },\n\n    data () {\n      return {\n        animationBaseName: 'spring-spinner-animation',\n        currentAnimationName: ''\n      }\n    },\n\n    computed: {\n      spinnerStyle () {\n        return {\n          height: `${this.size}px`,\n          width: `${this.size}px`\n        }\n      },\n\n      spinnerPartStyle () {\n        return {\n          height: `${this.size / 2}px`,\n          width: `${this.size}px`\n        }\n      },\n\n      rotatorStyle () {\n        return {\n          height: `${this.size}px`,\n          width: `${this.size}px`,\n          borderRightColor: this.color,\n          borderTopColor: this.color,\n          borderWidth: `${this.size / 7}px`,\n          animationDuration: `${this.animationDuration}ms`,\n          animationName: this.currentAnimationName\n        }\n      }\n    },\n\n    watch: {\n      '$props': {\n        handler () {\n          this.updateAnimation()\n        },\n        deep: true\n      }\n    },\n\n    mounted () {\n      this.updateAnimation()\n    },\n\n    methods: {\n      updateAnimation () {\n        this.updateAnimationName()\n        utils.appendKeyframes(this.currentAnimationName, this.generateKeyframes())\n      },\n\n      updateAnimationName () {\n        this.currentAnimationName = `${this.animationBaseName}-${Date.now()}`\n      },\n\n      generateKeyframes () {\n        return `\n          0% {\n            border-width: ${this.size / 7}px;\n          }\n          25% {\n            border-width: ${this.size / 23.33}px;\n          }\n          50% {\n            transform: rotate(115deg);\n            border-width: ${this.size / 7}px;\n          }\n          75% {\n            border-width: ${this.size / 23.33}px;\n           }\n          100% {\n           border-width: ${this.size / 7}px;\n          }`\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .spring-spinner, .spring-spinner * {\n    box-sizing: border-box;\n  }\n\n  .spring-spinner {\n    height: 60px;\n    width: 60px;\n  }\n\n  .spring-spinner .spring-spinner-part {\n    overflow: hidden;\n    height: calc(60px / 2);\n    width: 60px;\n  }\n\n  .spring-spinner  .spring-spinner-part.bottom {\n    transform: rotate(180deg) scale(-1, 1);\n  }\n\n  .spring-spinner .spring-spinner-rotator {\n    width: 60px;\n    height: 60px;\n    border: calc(60px / 7) solid transparent;\n    border-right-color: #ff1d5e;\n    border-top-color: #ff1d5e;\n    border-radius: 50%;\n    box-sizing: border-box;\n    animation: spring-spinner-animation 3s ease-in-out infinite;\n    transform: rotate(-200deg);\n  }\n\n  @keyframes spring-spinner-animation {\n    0% {\n      border-width: calc(60px / 7);\n    }\n    25% {\n      border-width: calc(60px / 23.33);\n    }\n    50% {\n      transform: rotate(115deg);\n      border-width: calc(60px / 7);\n    }\n    75% {\n      border-width: calc(60px / 23.33);\n    }\n    100% {\n      border-width: calc(60px / 7);\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/epic-spinners/src/components/lib"}]}