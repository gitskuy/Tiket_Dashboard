{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-preloader/VuesticPreLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/vuestic-theme/vuestic-components/vuestic-preloader/VuesticPreLoader.vue","mtime":1563286052653},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ahmad/tiket/experiments/myproject/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\nimport { color, lightness } from 'kewler';\nexport default {\n  name: 'vuestic-pre-loader',\n  methods: {\n    getPrevious: function getPrevious(index) {\n      if (index === 0) return this.points.length - 1;else return index - 1;\n    },\n    getNext: function getNext(index) {\n      if (index + 1 === this.points.length) {\n        return 0;\n      } else {\n        return index + 1;\n      }\n    },\n    setNextLighten: function setNextLighten(index) {\n      var lighten = this.points[index].lighten;\n      this.points[index].lighten = lighten === 8 ? 1 : lighten + 1;\n    },\n    draw: function draw() {\n      var _this = this;\n\n      var ctx = this.context;\n      ctx.clearRect(0, 0, 140, 104);\n      var padding = 4;\n      this.points.forEach(function (point) {\n        ctx.beginPath();\n        var delta = _this.radius + padding;\n        ctx.arc(point.x + delta, point.y + delta, _this.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = _this.color(lightness(point.lighten / 10 * 35))();\n        ctx.fill();\n      });\n      var main = this.points[this.mainIndex];\n      var delta = this.mainRadius - this.radius + padding;\n      ctx.beginPath();\n      ctx.arc(main.x + delta, main.y + delta, this.mainRadius, 0, Math.PI * 2, false);\n      ctx.fillStyle = this.color();\n      ctx.fill();\n      ctx.closePath();\n    },\n    calculate: function calculate() {\n      this.mainIndex = this.getNext(this.mainIndex);\n      var prevIndex = this.mainIndex;\n\n      for (var i = 0; i <= 7; i++) {\n        prevIndex = this.getPrevious(prevIndex);\n        this.setNextLighten(prevIndex);\n      }\n    },\n    update: function update() {\n      this.calculate();\n      this.draw();\n    },\n    animate: function animate() {\n      this.interval = setInterval(this.update, 30);\n    },\n    stop: function stop() {\n      clearInterval(this.interval);\n    }\n  },\n  mounted: function mounted() {\n    this.context = this.$refs.canvas.getContext('2d');\n    this.points = this.points.map(function (point) {\n      return _objectSpread({\n        lighten: 8\n      }, point);\n    });\n\n    for (var i = 1; i <= 7; i++) {\n      this.points[this.mainIndex - i].lighten = i;\n    }\n\n    this.draw();\n    this.animate();\n  },\n  data: function data() {\n    return {\n      points: require('./points.json'),\n      color: color(this.$store.state.app.config.palette.primary),\n      mainIndex: 7,\n      context: {},\n      radius: 4,\n      mainRadius: 8,\n      interval: {}\n    };\n  }\n};",{"version":3,"sources":["VuesticPreLoader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vuestic-pre-loader\">\n    <canvas ref=\"canvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { color, lightness } from 'kewler'\n\nexport default {\n  name: 'vuestic-pre-loader',\n  methods: {\n    getPrevious (index) {\n      if (index === 0) return this.points.length - 1\n      else return index - 1\n    },\n    getNext (index) {\n      if (index + 1 === this.points.length) {\n        return 0\n      } else {\n        return index + 1\n      }\n    },\n    setNextLighten (index) {\n      let lighten = this.points[index].lighten\n      this.points[index].lighten = lighten === 8 ? 1 : lighten + 1\n    },\n    draw () {\n      let ctx = this.context\n      ctx.clearRect(0, 0, 140, 104)\n      let padding = 4\n      this.points.forEach(point => {\n        ctx.beginPath()\n        let delta = this.radius + padding\n        ctx.arc(point.x + delta, point.y + delta, this.radius, 0, Math.PI * 2, false)\n        ctx.fillStyle = this.color(lightness(point.lighten / 10 * 35))()\n        ctx.fill()\n      })\n      let main = this.points[this.mainIndex]\n      let delta = this.mainRadius - this.radius + padding\n      ctx.beginPath()\n      ctx.arc(main.x + delta, main.y + delta, this.mainRadius, 0, Math.PI * 2, false)\n      ctx.fillStyle = this.color()\n      ctx.fill()\n      ctx.closePath()\n    },\n    calculate () {\n      this.mainIndex = this.getNext(this.mainIndex)\n      let prevIndex = this.mainIndex\n      for (let i = 0; i <= 7; i++) {\n        prevIndex = this.getPrevious(prevIndex)\n        this.setNextLighten(prevIndex)\n      }\n    },\n    update () {\n      this.calculate()\n      this.draw()\n    },\n    animate () {\n      this.interval = setInterval(this.update, 30)\n    },\n    stop () {\n      clearInterval(this.interval)\n    },\n  },\n  mounted () {\n    this.context = this.$refs.canvas.getContext('2d')\n    this.points = this.points.map(point => {\n      return {\n        lighten: 8,\n        ...point\n      }\n    })\n    for (let i = 1; i <= 7; i++) {\n      this.points[this.mainIndex - i].lighten = i\n    }\n    this.draw()\n    this.animate()\n  },\n  data () {\n    return {\n      points: require('./points.json'),\n      color: color(this.$store.state.app.config.palette.primary),\n      mainIndex: 7,\n      context: {},\n      radius: 4,\n      mainRadius: 8,\n      interval: {},\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/vuestic-theme/vuestic-components/vuestic-preloader"}]}