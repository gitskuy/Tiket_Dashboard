{"remainingRequest":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js!/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmad/tiket/experiments/myproject/src/components/ui/notifications/ToastPositionPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmad/tiket/experiments/myproject/src/components/ui/notifications/ToastPositionPicker.vue","mtime":1563286052633},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/cache-loader/dist/cjs.js","mtime":1563287225222},{"path":"/home/ahmad/tiket/experiments/myproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'toast-position-picker',\n  props: {\n    value: {\n      type: String,\n      default: 'bottom-center'\n    }\n  },\n  methods: {\n    updatePosition: function updatePosition(position) {\n      this.$emit('input', position);\n    },\n    isBoxSelected: function isBoxSelected(position) {\n      return this.value === position;\n    }\n  }\n};",{"version":3,"sources":["ToastPositionPicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAA;AACA,QAAA,uBADA;AAGA,SAAA;AACA,WAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AADA,GAHA;AAUA,WAAA;AACA,kBADA,0BACA,QADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,QAAA;AACA,KAHA;AAKA,iBALA,yBAKA,QALA,EAKA;AACA,aAAA,KAAA,KAAA,KAAA,QAAA;AACA;AAPA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"toast-position-picker\">\n    <div class=\"position-boxes-row\">\n      <div class=\"position-box\"\n           @click=\"updatePosition('top-left')\"\n           :class=\"{'selected': isBoxSelected('top-left')}\">\n      </div>\n      <div class=\"position-box\"\n           @click=\"updatePosition('top-center')\"\n           :class=\"{'selected': isBoxSelected('top-center')}\">\n      </div>\n      <div class=\"position-box\"\n           @click=\"updatePosition('top-right')\"\n           :class=\"{'selected': isBoxSelected('top-right')}\">\n      </div>\n    </div>\n    <div class=\"position-boxes-row\">\n      <div class=\"position-box\"\n           @click=\"updatePosition('bottom-left')\"\n           :class=\"{'selected': isBoxSelected('bottom-left')}\">\n      </div>\n      <div class=\"position-box\"\n           @click=\"updatePosition('bottom-center')\"\n           :class=\"{'selected': isBoxSelected('bottom-center')}\">\n      </div>\n      <div class=\"position-box\"\n           @click=\"updatePosition('bottom-right')\"\n           :class=\"{'selected': isBoxSelected('bottom-right')}\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'toast-position-picker',\n\n  props: {\n    value: {\n      type: String,\n      default: 'bottom-center',\n    },\n  },\n\n  methods: {\n    updatePosition (position) {\n      this.$emit('input', position)\n    },\n\n    isBoxSelected (position) {\n      return this.value === position\n    },\n  },\n}\n</script>\n\n<style lang='scss' scoped>\n.toast-position-picker {\n  width: 112px;\n  height: 76px;\n  margin-right: 2rem;\n}\n\n.position-boxes-row {\n  display: flex;\n  flex-direction: row;\n\n  &:first-child {\n    margin-bottom: 2px;\n  }\n}\n\n.position-box {\n  height: 36px;\n  width: 36px;\n  margin-right: 2px;\n  cursor: pointer;\n  background-color: $brand-primary;\n  opacity: 0.3;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    opacity: 0.6;\n  }\n\n  &.selected {\n    opacity: 1;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/ui/notifications"}]}